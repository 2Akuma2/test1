/**
 @script common
 @context iw
 @description A QF-Test ImageWrapper object.
 */
class CommonIw{
    
    
    /**
     * Take screenshot of the whole screen. If you use the parameters x, y,
     * width and height, you can take a screenshot of a specific region of the
     * screen.
     * 
     * @param x
     * The x co-ordinate of the left upper corner of the sub-region.
     * @param y
     * The y co-ordinate of the left upper corner of the sub-region.
     * @param width
     * The width the sub-region.
     * @param height
     * The height height of the sub-region.
     * @return The ImageRep object of the actual screenshot.
     */
    grabScreenshot(x=None, y=None, width=None, height=None)
    /**
     * Take screenshot of a given component. If you use the parameters x, y,
     * width and height, you can take a screenshot of a specific region of the
     * component.
     * 
     * @param com
     * The component.
     * @param x
     * The x co-ordinate of the left upper corner of the sub-region.
     * @param y
     * The y co-ordinate of the left upper corner of the sub-region.
     * @param width
     * The width the sub-region.
     * @param height
     * The height height of the sub-region.
     * @return The ImageRep object of the actual screenshot.
     */
    grabImage(com, x=None, y=None, width=None, height=None)
    /**
     * Take a single screenshot of all available screens.
     * 
     * @return An ImageRep object with a screenshot of all available screens.
     */
    grabScreenshotOfAllScreens()
    /**
     * Take screenshots of all available screens.
     * 
     * @param monitor
     * Index of the monitor to take the screenshot from.
     * @return An array of ImageRep objects of all screenshots or the specific
     * ImageRep object, if the monitor parameter has been used.
     */
    grabScreenshots(monitor=None)
    /**
     * Return the total number of monitors.
     * 
     * @Returns The total numer of monitors.
     */
    getMonitorCount()
    /**
     * Save a given ImageRep object to a given file. The file will be in PNG
     * format.
     * 
     * @param filename
     * The name of the file to save the image.
     * @param image
     * The image to save.
     */
    savePng(filename, image)
    /**
     * Load an ImageRep object of a given file.
     * 
     * @param filename
     * The file to load the image. The file must be in PNG format.
     * @return The loaded ImageRep object.
     */
    loadPng(filename)
    /**
     * Check whether a given component is really visible on all connected
     * monitors.
     * 
     * @param com
     * The component.
     * @return True, if component is visible.
     */
    isComponentShownOnVisibleMonitors(com)
}
