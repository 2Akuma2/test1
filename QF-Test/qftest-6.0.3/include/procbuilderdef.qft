<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE RootStep>
<RootStep id="_0" name="root"
          signature="302E02150093419D9ED86CB9A8AF401A936B7F06D3DA66AB87021500CE9E89AFD7FDFF58CFCB81FADC8EF349FA5954B2"
          version="6.0.3">
  <include>qfs.qft</include>
  <PackageRoot id="_4">
    <Package id="_7d" name="procbuilder">
      <Package id="_5e" name="javax_swing_AbstractButton">
        <Package id="_5f" name="press">
          <comment>@EXCEPT=javax.swing.JMenuItem,javax.swing.JCheckBoxMenuItem,javax.swing.JCheckBox,javax.swing.JButton,javax.swing.JRadioButton</comment>
          <Procedure id="_5g" name="press_&lt;COMPID&gt;">
            <comment>Click the button.</comment>
            <ProcedureCall id="_5h" procedure="qfs.swing.general.doClick">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_5i" name="check">
          <comment>@EXCEPT=javax.swing.JMenuItem,javax.swing.JCheckBoxMenuItem,javax.swing.JCheckBox,javax.swing.JButton,javax.swing.JRadioButton</comment>
          <Package id="_7A" name="enabled">
            <Procedure id="_5j" name="checkEnabledStatus_&lt;COMPID&gt;">
              <variable name="enabled">&lt;CURRENTENABLEDSTATE&gt;</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check, whether component is enabled.

@param enabled   true, if component is expected to be enabled.
	    false, if component is not expected to be enabled.

@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_5k"
                             procedure="qfs.check.checkEnabledStatus">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="enabled">$(enabled)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_63" name="javax_swing_JButton">
        <Package id="_64" name="press">
          <comment>@EXCEPT=javax.swing.JMenuItem,javax.swing.JCheckBoxMenuItem</comment>
          <Procedure id="_65" name="press_&lt;COMPID&gt;">
            <comment>Click the button.</comment>
            <ProcedureCall id="_66" procedure="qfs.swing.general.doClick">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_67" name="check">
          <comment>@EXCEPT=javax.swing.JMenuItem,javax.swing.JCheckBoxMenuItem</comment>
          <Package id="_79" name="enabled">
            <Procedure id="_68" name="checkEnabledStatus_&lt;COMPID&gt;">
              <variable name="enabled">&lt;CURRENTENABLEDSTATE&gt;</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check, whether component is enabled.

@param enabled   true, if component is expected to be enabled.
	    false, if component is not expected to be enabled.

@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_69"
                             procedure="qfs.check.checkEnabledStatus">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="enabled">$(enabled)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_3q" name="javax_swing_JCheckBox">
        <Package id="_62t" name="get">
          <Procedure id="_62u" name="getValue_&lt;COMPID&gt;">
            <comment>Return the value of a checkbox.
It's either 1, if box is selected of 0, if box is not selected.

@return  The current value.</comment>
            <ProcedureCall id="_62v" local="true"
                           procedure="qfs.swing.checkbox.getValue"
                           retvarname="currentValue">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_62w" retval="$(currentValue)"/>
          </Procedure>
        </Package>
        <Package id="_3r" name="set">
          <Procedure id="_3s" name="set_&lt;COMPID&gt;">
            <variable name="check">true</variable>
            <comment>Select or deselect the checkbox.

@param check  true, if checkbox should be checked.
	false, if checkbox should not be checked.</comment>
            <ProcedureCall id="_3t" procedure="qfs.swing.checkbox.set">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="check">$(check)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_3u" name="check">
          <Package id="_7B" name="selected">
            <Procedure id="_45" name="checkSelectedStatus_&lt;COMPID&gt;">
              <variable name="selected">&lt;CURRENTSELECTEDSTATE&gt;</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check, whether checkbox is selected.

@param selected  true, if checkbox is expected to be checked.
	    false, if checkbox is not expected to be checked.

@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_46"
                             procedure="qfs.check.checkSelectedStatus">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="selected">$(selected)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_6D" name="javax_swing_JCheckBoxMenuItem">
        <Package id="_62q" name="select-menu">
          <Package id="_63W" name="&lt;MHIERARCHY&gt;">
            <Procedure id="_62r" name="select_&lt;COMPID&gt;">
              <variable name="checkItemValue">true</variable>
              <comment>Select the menu-item.</comment>
              <ProcedureCall id="_62s"
                             procedure="qfs.swing.menu.selectCheckMenuItemInHierarchy">
                <variable name="menu">&lt;MHIERARCHY&gt;</variable>
                <variable name="checkItem">${id:&lt;COMPID&gt;}</variable>
                <variable name="menustringSeparator">&lt;QFS&gt;</variable>
                <variable name="checkItemValue">$(checkItemValue)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_4X" name="javax_swing_JComboBox">
        <Package id="_62x" name="get">
          <Procedure id="_62y" name="getValue_&lt;COMPID&gt;">
            <comment>Return the value of a combobox.

@return  The current value.</comment>
            <ProcedureCall id="_62z" local="true"
                           procedure="qfs.swing.combobox.getValue"
                           retvarname="currentValue">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_62+" retval="$(currentValue)"/>
          </Procedure>
        </Package>
        <Package id="_4Y" name="set">
          <Procedure id="_4Z" name="set_&lt;COMPID&gt;">
            <variable name="value"/>
            <comment>Set a value in the combobox.

@param value   The value to be set.</comment>
            <ProcedureCall id="_4a"
                           procedure="qfs.swing.combobox.setValueViaSUTScript">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="value">$(value)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_4b" name="check">
          <Package id="_7C" name="text">
            <Procedure id="_4c" name="checkText_&lt;COMPID&gt;">
              <variable name="text">&lt;CURRENTVALUE&gt;</variable>
              <variable name="regexp">false</variable>
              <variable name="negate">false</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check the text of the component.

@param text   the expected text.
@param regexp true, if check should use a regular expression.
	 false, if the text should match exactly.
@param negate  true, if anything but the given text is allowed in the component.
	  false, if no negative check has to be performed.
@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_4d" procedure="qfs.check.checkText">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="regexp">$(regexp)</variable>
                <variable name="negate">$(negate)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_5D" name="javax_swing_JDialog">
        <Package id="_5E" name="set-window">
          <Procedure id="_5F" name="set_&lt;COMPID&gt;">
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>@FORCHILDREN
Fill the components of the dialog.</comment>
            <ProcedureCall id="_5G"
                           procedure="javax_swing_text_JTextComponent.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5K"
                           procedure="javax_swing_JComboBox.set.set_&lt;CCOMPID&gt;">
              <variable name="value">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
            <ProcedureCall id="_5L"
                           procedure="javax_swing_JCheckBox.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_5H" name="check-window">
          <Procedure id="_5I" name="checkText_AllElements_&lt;COMPID&gt;">
            <variable name="regexp">false</variable>
            <comment>@FORCHILDREN
Check the text of all components of the dialog.</comment>
            <ProcedureCall id="_5J"
                           procedure="javax_swing_text_JTextComponent.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5P"
                           procedure="javax_swing_JComboBox.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_5l"
                     name="checkEnabledStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the enabled status of all components of the dialog.</comment>
            <ProcedureCall id="_5m"
                           procedure="javax_swing_JButton.check.enabled.checkEnabledStatus_&lt;CCOMPID&gt;">
              <variable name="enabled">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_5Q"
                     name="checkSelectedStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the selected status of all components of the dialog.</comment>
            <ProcedureCall id="_5R"
                           procedure="javax_swing_JCheckBox.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_5+S" name="set-window-defaults">
          <Procedure id="_5+T" name="set_&lt;COMPID&gt;">
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>@FORCHILDREN
Fill the components of the dialog with the recorded default values.</comment>
            <ProcedureCall id="_5+U"
                           procedure="javax_swing_text_JTextComponent.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5+V"
                           procedure="javax_swing_JComboBox.set.set_&lt;CCOMPID&gt;">
              <variable name="value">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
            </ProcedureCall>
            <ProcedureCall id="_5+W"
                           procedure="javax_swing_JCheckBox.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_5+X" name="check-window-defaults">
          <Procedure id="_5+Y" name="checkText_AllElements_&lt;COMPID&gt;">
            <variable name="regexp">false</variable>
            <comment>@FORCHILDREN
Check the text of all components of the dialog with the recorded default values.</comment>
            <ProcedureCall id="_5+Z"
                           procedure="javax_swing_text_JTextComponent.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5+a"
                           procedure="javax_swing_JComboBox.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_5+b"
                     name="checkEnabledStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the enabled status of all components of the dialog with the recorded enabled states.</comment>
            <ProcedureCall id="_5+c"
                           procedure="javax_swing_JButton.check.enabled.checkEnabledStatus_&lt;CCOMPID&gt;">
              <variable name="enabled">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTENABLEDSTATE&gt;</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_5+d"
                     name="checkSelectedStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the selected status of all components of the dialog with the recorded selected states.</comment>
            <ProcedureCall id="_5+e"
                           procedure="javax_swing_JCheckBox.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_5U" name="wait">
          <Procedure id="_5a" name="waitForWindow">
            <variable name="timeout">30000</variable>
            <variable name="throwExc">true</variable>
            <comment>Wait for the dialog.

@param timeout  Timeout for waiting for dialog.
@param throwExc  true, if an exception should be thrown in case of an error.
	     false, if an error should be logged in case of an error.</comment>
            <ComponentWaiter client="$(client)" component="&lt;COMPID&gt;"
                             id="_5d" raise="$(throwExc)"
                             timeout="$(timeout)"/>
          </Procedure>
          <Procedure id="_61g" name="waitForWindowForAbsence">
            <variable name="timeout">30000</variable>
            <variable name="throwExc">true</variable>
            <comment>Wait till the dialog disappears.

@param timeout  Timeout for disappearance of the dialog.
@param throwExc  true, if an exception should be thrown in case of an error.
	     false, if an error should be logged in case of an error.</comment>
            <ComponentWaiter absence="true" client="$(client)"
                             component="&lt;COMPID&gt;" id="_61h"
                             raise="$(throwExc)" timeout="$(timeout)"/>
          </Procedure>
        </Package>
      </Package>
      <Package id="_6g" name="javax_swing_JFrame">
        <Package id="_5zf" name="set-window">
          <Procedure id="_5zg" name="set_&lt;COMPID&gt;">
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>@FORCHILDREN
Fill the components of the window.</comment>
            <ProcedureCall id="_5zh"
                           procedure="javax_swing_text_JTextComponent.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5zi"
                           procedure="javax_swing_JComboBox.set.set_&lt;CCOMPID&gt;">
              <variable name="value">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
            <ProcedureCall id="_5zj"
                           procedure="javax_swing_JCheckBox.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_5zk" name="check-window">
          <Procedure id="_5zl" name="checkText_AllElements_&lt;COMPID&gt;">
            <variable name="regexp">false</variable>
            <comment>@FORCHILDREN
Check the text of all components of the frame.</comment>
            <ProcedureCall id="_5zm"
                           procedure="javax_swing_text_JTextComponent.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5zn"
                           procedure="javax_swing_JComboBox.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_5zo"
                     name="checkEnabledStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the enabled status of all components of the frame.</comment>
            <ProcedureCall id="_5zp"
                           procedure="javax_swing_JButton.check.enabled.checkEnabledStatus_&lt;CCOMPID&gt;">
              <variable name="enabled">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_5zq"
                     name="checkSelectedStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the selected status of all components of the frame.</comment>
            <ProcedureCall id="_5zr"
                           procedure="javax_swing_JCheckBox.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_5+g" name="set-window-defaults">
          <Procedure id="_5+h" name="set_&lt;COMPID&gt;">
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>@FORCHILDREN
Fill the components of the frame with the recorded default values.</comment>
            <ProcedureCall id="_5+i"
                           procedure="javax_swing_text_JTextComponent.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5+j"
                           procedure="javax_swing_JComboBox.set.set_&lt;CCOMPID&gt;">
              <variable name="value">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
            </ProcedureCall>
            <ProcedureCall id="_5+k"
                           procedure="javax_swing_JCheckBox.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_5+l" name="check-window-defaults">
          <Procedure id="_5+m" name="checkText_AllElements_&lt;COMPID&gt;">
            <variable name="regexp">false</variable>
            <comment>@FORCHILDREN
Check the text of all components of the frame with the recorded default values.</comment>
            <ProcedureCall id="_5+n"
                           procedure="javax_swing_text_JTextComponent.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5+o"
                           procedure="javax_swing_JComboBox.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_5+p"
                     name="checkEnabledStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the enabled status of all components of the frame with the recorded enabled states.</comment>
            <ProcedureCall id="_5+q"
                           procedure="javax_swing_JButton.check.enabled.checkEnabledStatus_&lt;CCOMPID&gt;">
              <variable name="enabled">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTENABLEDSTATE&gt;</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_5+r"
                     name="checkSelectedStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the selected status of all components of the frame with the recorded selected states.</comment>
            <ProcedureCall id="_5+s"
                           procedure="javax_swing_JCheckBox.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_5zt" name="wait">
          <Procedure id="_5zu" name="waitForWindow">
            <variable name="timeout">30000</variable>
            <variable name="throwExc">true</variable>
            <comment>Wait for the frame.

@param timeout  Timeout for waiting for dialog.
@param throwExc  true, if an exception should be thrown in case of an error.
	     false, if an error should be logged in case of an error.</comment>
            <ComponentWaiter client="$(client)" component="&lt;COMPID&gt;"
                             id="_5zv" raise="$(throwExc)"
                             timeout="$(timeout)"/>
          </Procedure>
          <Procedure id="_61c" name="waitForWindowForAbsence">
            <variable name="timeout">30000</variable>
            <variable name="throwExc">true</variable>
            <comment>Wait till the frame disappears.

@param timeout  Timeout for disappearance of the dialog.
@param throwExc  true, if an exception should be thrown in case of an error.
	     false, if an error should be logged in case of an error.</comment>
            <ComponentWaiter absence="true" client="$(client)"
                             component="&lt;COMPID&gt;" id="_61d"
                             raise="$(throwExc)" timeout="$(timeout)"/>
          </Procedure>
        </Package>
      </Package>
      <Package id="_613" name="javax_swing_JInternalFrame">
        <Package id="_614" name="set-window">
          <Procedure id="_615" name="set_&lt;COMPID&gt;">
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>@FORCHILDREN
Fill the components of the frame.</comment>
            <ProcedureCall id="_616"
                           procedure="javax_swing_text_JTextComponent.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_617"
                           procedure="javax_swing_JComboBox.set.set_&lt;CCOMPID&gt;">
              <variable name="value">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
            <ProcedureCall id="_618"
                           procedure="javax_swing_JCheckBox.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_619" name="set-window-defaults">
          <Procedure id="_61A" name="set_&lt;COMPID&gt;">
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>@FORCHILDREN
Fill the components of the frame with the recorded default values.</comment>
            <ProcedureCall id="_61B"
                           procedure="javax_swing_text_JTextComponent.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_61C"
                           procedure="javax_swing_JComboBox.set.set_&lt;CCOMPID&gt;">
              <variable name="value">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
            </ProcedureCall>
            <ProcedureCall id="_61D"
                           procedure="javax_swing_JCheckBox.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_61i" name="check-window">
          <Procedure id="_61j" name="checkText_AllElements_&lt;COMPID&gt;">
            <variable name="regexp">false</variable>
            <comment>@FORCHILDREN
Check the text of all components of the frame.</comment>
            <ProcedureCall id="_61k"
                           procedure="javax_swing_text_JTextComponent.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_61l"
                           procedure="javax_swing_JComboBox.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_61m"
                     name="checkEnabledStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the enabled status of all components of the frame.</comment>
            <ProcedureCall id="_61n"
                           procedure="javax_swing_JButton.check.enabled.checkEnabledStatus_&lt;CCOMPID&gt;">
              <variable name="enabled">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_61o"
                     name="checkSelectedStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the selected status of all components of the frame.</comment>
            <ProcedureCall id="_61p"
                           procedure="javax_swing_JCheckBox.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_61r" name="check-window-defaults">
          <Procedure id="_61s" name="checkText_AllElements_&lt;COMPID&gt;">
            <variable name="regexp">false</variable>
            <comment>@FORCHILDREN
Check the text of all components of the frame with the recorded default values.</comment>
            <ProcedureCall id="_61t"
                           procedure="javax_swing_text_JTextComponent.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_61u"
                           procedure="javax_swing_JComboBox.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_61v"
                     name="checkEnabledStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the enabled status of all components of the frame with the recorded enabled states.</comment>
            <ProcedureCall id="_61w"
                           procedure="javax_swing_JButton.check.enabled.checkEnabledStatus_&lt;CCOMPID&gt;">
              <variable name="enabled">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTENABLEDSTATE&gt;</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_61x"
                     name="checkSelectedStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the selected status of all components of the frame with the recorded selected states.</comment>
            <ProcedureCall id="_61y"
                           procedure="javax_swing_JCheckBox.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_61+" name="wait">
          <Procedure id="_61-" name="waitForWindow">
            <variable name="timeout">30000</variable>
            <variable name="throwExc">true</variable>
            <comment>Wait for the frame.

@param timeout  Timeout for waiting for dialog.
@param throwExc  true, if an exception should be thrown in case of an error.
	     false, if an error should be logged in case of an error.</comment>
            <ComponentWaiter client="$(client)" component="&lt;COMPID&gt;"
                             id="_620" raise="$(throwExc)"
                             timeout="$(timeout)"/>
          </Procedure>
          <Procedure id="_621" name="waitForWindowForAbsence">
            <variable name="timeout">30000</variable>
            <variable name="throwExc">true</variable>
            <comment>Wait till the frame disappears.

@param timeout  Timeout for disappearance of the dialog.
@param throwExc  true, if an exception should be thrown in case of an error.
	     false, if an error should be logged in case of an error.</comment>
            <ComponentWaiter absence="true" client="$(client)"
                             component="&lt;COMPID&gt;" id="_622"
                             raise="$(throwExc)" timeout="$(timeout)"/>
          </Procedure>
        </Package>
      </Package>
      <Package id="_60N" name="javax_swing_JList">
        <Package id="_63C" name="check">
          <Package id="_63D" name="list">
            <Procedure id="_63E" name="checkItemCount_&lt;COMPID&gt;">
              <variable name="compareValue">0</variable>
              <variable name="compareMode">=</variable>
              <variable name="errorLevel">ERROR</variable>
              <variable name="appearInReport">1</variable>
              <comment>Check the number of rows of a table according to a specified comparison mode.
It uses the method JTable.getRowCount() to get the number.</comment>
              <ProcedureCall id="_63F" local="true"
                             procedure="qfs.swing.list.checks.checkNumberOfItems"
                             retvarname="rowcount">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="compareValue">$(compareValue)</variable>
                <variable name="compareMode">$(compareMode)</variable>
                <variable name="errorLevel">$(errorLevel)</variable>
                <variable name="appearInReport">$(appearInReport)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
        <Package id="_60q" name="count">
          <Procedure id="_60t" name="getItemCount_&lt;COMPID&gt;">
            <comment>Return the number of items of the list.

@return  the amount of items of the list.</comment>
            <ProcedureCall id="_60u" local="true"
                           procedure="qfs.swing.list.getItemCount"
                           retvarname="itemcount">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_60v" retval="$(itemcount)"/>
          </Procedure>
        </Package>
        <Package id="_63G" name="select">
          <Procedure id="_63H" name="selectItem_&lt;COMPID&gt;">
            <variable name="item"/>
            <variable name="itemSeparator">@</variable>
            <comment>Select an item in a list.

@param item 		The item.
@param itemSeparator 	Separator to use for the item syntax. Default is @ for text values, also available &amp; for index and % for regexp.

</comment>
            <ProcedureCall id="_63I" procedure="qfs.swing.list.selectItem">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="item">$(item)</variable>
              <variable name="itemSeparator">$(itemSeparator)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_3P" name="javax_swing_JMenuItem">
        <Package id="_3Q" name="select-menu">
          <Package id="_63V" name="&lt;MHIERARCHY&gt;">
            <Procedure id="_3R" name="select_&lt;COMPID&gt;">
              <comment>Select the menu-item.</comment>
              <ProcedureCall id="_3S"
                             procedure="qfs.swing.menu.selectMenuItemInHierarchy">
                <variable name="menu">&lt;MHIERARCHY&gt;</variable>
                <variable name="item">${id:&lt;COMPID&gt;}</variable>
                <variable name="menustringSeparator">&lt;QFS&gt;</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_8G" name="javax_swing_JPanel">
        <Package id="_623" name="check-panel">
          <Procedure id="_624" name="checkText_AllElements_&lt;COMPID&gt;">
            <variable name="regexp">false</variable>
            <comment>@FORCHILDREN
Check the text of all components of the panel.</comment>
            <ProcedureCall id="_625"
                           procedure="javax_swing_text_JTextComponent.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_626"
                           procedure="javax_swing_JComboBox.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_627"
                     name="checkEnabledStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the enabled status of all components of the panel.</comment>
            <ProcedureCall id="_628"
                           procedure="javax_swing_JButton.check.enabled.checkEnabledStatus_&lt;CCOMPID&gt;">
              <variable name="enabled">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_629"
                     name="checkSelectedStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the selected status of all components of the panel.</comment>
            <ProcedureCall id="_62A"
                           procedure="javax_swing_JCheckBox.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_62C" name="check-panel-defaults">
          <Procedure id="_62D" name="checkText_AllElements_&lt;COMPID&gt;">
            <variable name="regexp">false</variable>
            <comment>@FORCHILDREN
Check the text of all components of the panel with the recorded default values.</comment>
            <ProcedureCall id="_62E"
                           procedure="javax_swing_text_JTextComponent.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_62F"
                           procedure="javax_swing_JComboBox.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_62G"
                     name="checkEnabledStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the enabled status of all components of the panel with the recorded enabled states.</comment>
            <ProcedureCall id="_62H"
                           procedure="javax_swing_JButton.check.enabled.checkEnabledStatus_&lt;CCOMPID&gt;">
              <variable name="enabled">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTENABLEDSTATE&gt;</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_62I"
                     name="checkSelectedStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the selected status of all components of the panel with the recorded selected states.</comment>
            <ProcedureCall id="_62J"
                           procedure="javax_swing_JCheckBox.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_8H" name="set-panel">
          <Procedure id="_8I" name="set_&lt;COMPID&gt;">
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>@FORCHILDREN
Fill the components of the panel.</comment>
            <ProcedureCall id="_8J"
                           procedure="javax_swing_text_JTextComponent.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_8K"
                           procedure="javax_swing_JComboBox.set.set_&lt;CCOMPID&gt;">
              <variable name="value">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
            <ProcedureCall id="_8L"
                           procedure="javax_swing_JCheckBox.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_5+u" name="set-panel-defaults">
          <Procedure id="_5+v" name="set_&lt;COMPID&gt;">
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>@FORCHILDREN
Fill the components of the panel with the recorded default values.</comment>
            <ProcedureCall id="_5+w"
                           procedure="javax_swing_text_JTextComponent.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5+x"
                           procedure="javax_swing_JComboBox.set.set_&lt;CCOMPID&gt;">
              <variable name="value">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
            </ProcedureCall>
            <ProcedureCall id="_5+y"
                           procedure="javax_swing_JCheckBox.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_3x" name="javax_swing_JRadioButton">
        <Package id="_62-" name="get">
          <Procedure id="_630" name="getValue_&lt;COMPID&gt;">
            <comment>Return the value of a radio button.
It's either 1, if radio button is selected of 0, if radio button is not selected.

@return  The current value.</comment>
            <ProcedureCall id="_631" local="true"
                           procedure="qfs.swing.radiobutton.getValue"
                           retvarname="currentValue">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_632" retval="$(currentValue)"/>
          </Procedure>
        </Package>
        <Package id="_3y" name="set">
          <Procedure id="_3z" name="press_&lt;COMPID&gt;">
            <variable name="select">false</variable>
            <comment>Select or deselect a radiobutton.

@param select	true, if radiobutton should be selected.
	false, if radiobutton should not be selected.</comment>
            <ProcedureCall id="_3+"
                           procedure="qfs.swing.general.clickAtComponent">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="click">$(select)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_42" name="check">
          <Package id="_7D" name="selected">
            <Procedure id="_43" name="checkSelectedStatus_&lt;COMPID&gt;">
              <variable name="selected">&lt;CURRENTSELECTEDSTATE&gt;</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check, whether radiobutton is selected.

@param selected  true, if radiobutton is expected to be checked.
	    false, if radiobutton is not expected to be checked.

@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_44"
                             procedure="qfs.check.checkSelectedStatus">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="selected">$(selected)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_62f" name="javax_swing_JSlider">
        <Package id="_63R" name="get">
          <Procedure id="_63S" name="getValue_&lt;COMPID&gt;">
            <comment>Return the value of the slider.

@return  The current value.</comment>
            <ProcedureCall id="_63T" local="true"
                           procedure="qfs.swing.slider.getValue"
                           retvarname="currentValue">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_63U" retval="$(currentValue)"/>
          </Procedure>
        </Package>
        <Package id="_62j" name="set">
          <Procedure id="_62k" name="set_&lt;COMPID&gt;">
            <variable name="value"/>
            <comment>Set the value of the slider.

@param value	The value to set.</comment>
            <ProcedureCall id="_62l" procedure="qfs.swing.slider.setValue">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="value">$(value)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_62m" name="check">
          <Package id="_62n" name="value">
            <Procedure id="_62o" name="checkValue_&lt;COMPID&gt;">
              <variable name="value">&lt;CURRENTVALUE&gt;</variable>
              <variable name="regexp">false</variable>
              <variable name="negate">false</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check the value of the component.

@param value   the expected value.
@param regexp true, if check should use a regular expression.
	 false, if the text should match exactly.
@param negate  true, if anything but the given text is allowed in the component.
	  false, if no negative check has to be performed.
@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_62p"
                             procedure="qfs.swing.slider.checks.checkValue">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="regexp">$(regexp)</variable>
                <variable name="negate">$(negate)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="value">$(value)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_6y" name="javax_swing_JTabbedPane">
        <Package id="_6z" name="select">
          <Procedure id="_6+" name="selectTab_&lt;COMPID&gt;">
            <variable name="separator">@</variable>
            <variable name="value"/>
            <comment>Select a tab.

@param value	The item of the tabfolder.
@param separator	@ if the tab folder should be addressed by the full text.
		&amp; if the tab folder should be addressed by an index.
		% if the tab folder should be addressed by an regular expression.</comment>
            <ProcedureCall id="_6-"
                           procedure="qfs.swing.tabbedpane.selectTab">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="separator">$(separator)</variable>
              <variable name="value">$(value)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_47" name="javax_swing_JTable">
        <Package id="_633" name="check">
          <Package id="_63B" name="table">
            <Procedure id="_634" name="checkRowCount_&lt;COMPID&gt;">
              <variable name="compareValue">0</variable>
              <variable name="compareMode">=</variable>
              <variable name="errorLevel">ERROR</variable>
              <variable name="appearInReport">1</variable>
              <comment>Check the number of rows of a table according to a specified comparison mode.
It uses the method JTable.getRowCount() to get the number.</comment>
              <ProcedureCall id="_635" local="true"
                             procedure="qfs.swing.table.checks.checkNumberOfRows"
                             retvarname="rowcount">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="compareValue">$(compareValue)</variable>
                <variable name="compareMode">$(compareMode)</variable>
                <variable name="errorLevel">$(errorLevel)</variable>
                <variable name="appearInReport">$(appearInReport)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
        <Package id="_4W" name="count">
          <Procedure id="_4S" name="getRowCount_&lt;COMPID&gt;">
            <comment>Return the number of rows of the table.

@return the amount of the rows of the table.</comment>
            <ProcedureCall id="_4T" local="true"
                           procedure="qfs.swing.table.getRowCount"
                           retvarname="rowcount">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_60w" retval="$(rowcount)"/>
          </Procedure>
          <Procedure id="_4U" name="getColumnCount_&lt;COMPID&gt;">
            <comment>Return the number of columns of the table.

@return the amount of the columns of the table.</comment>
            <ProcedureCall id="_4V" local="true"
                           procedure="qfs.swing.table.getColumnCount"
                           retvarname="colcount">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_60x" retval="$(colcount)"/>
          </Procedure>
        </Package>
        <Package id="_48" name="select">
          <Procedure id="_49" name="selectCell_&lt;COMPID&gt;">
            <variable name="column"/>
            <variable name="row"/>
            <variable name="columnSeparator">@</variable>
            <variable name="rowSeparator">@</variable>
            <comment>Select a cell in the table.

@param column	The column of the table.
@param row		The row of the table.
@param columnSeparator	@ if then column should be addressed by the full text.
		&amp; if the column should be addressed by an index.
		% if the column should be addressed by an regular expression.
@param rowSeparator	@ if then row should addressed by the full text.
		&amp; if the row should be addressed by an index.
		% if the row should be addressed by an regular expression.</comment>
            <ProcedureCall id="_4A" procedure="qfs.swing.table.selectCell">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="column">$(column)</variable>
              <variable name="row">$(row)</variable>
              <variable name="columnSeparator">$(columnSeparator)</variable>
              <variable name="rowSeparator">$(rowSeparator)</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_4E" name="deselectAll_&lt;COMPID&gt;">
            <comment>Deselect all rows of the table.</comment>
            <ProcedureCall id="_4F"
                           procedure="qfs.swing.table.selection.deselectAllRows">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_4G" name="selectAll_&lt;COMPID&gt;">
            <comment>Select all rows of the table.</comment>
            <ProcedureCall id="_4H"
                           procedure="qfs.swing.table.selection.selectAllRows">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_4I" name="javax_swing_JTree">
        <Package id="_63X" name="actions">
          <Procedure id="_4M" name="expand_&lt;COMPID&gt;">
            <variable name="node"/>
            <variable name="separator">@</variable>
            <comment>Expand a node of the tree.

@param node	The node of the tree.
@param separator	@ if then node should be addressed by the full text.
		&amp; if the node should be addressed by an index.
		% if the node should be addressed by an regular expression.</comment>
            <ProcedureCall id="_4N" procedure="qfs.swing.tree.expandNode">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="node">$(node)</variable>
              <variable name="separator">$(separator)</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_4O" name="collapse_&lt;COMPID&gt;">
            <variable name="node"/>
            <variable name="separator">@</variable>
            <comment>Collapse a node of the tree.

@param node	The node of the tree.
@param separator	@ if then node should be addressed by the full text.
		&amp; if the node should be addressed by an index.
		% if the node should be addressed by an regular expression.</comment>
            <ProcedureCall id="_4P" procedure="qfs.swing.tree.collapseNode">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="node">$(node)</variable>
              <variable name="separator">$(separator)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_4J" name="select">
          <Procedure id="_4K" name="selectNode_&lt;COMPID&gt;">
            <variable name="node"/>
            <variable name="separator">@</variable>
            <comment>Select a node of the tree.

@param node	The node of the tree.
@param separator	@ if then node should be addressed by the full text.
		&amp; if the node should be addressed by an index.
		% if the node should be addressed by an regular expression.</comment>
            <ProcedureCall id="_4L" procedure="qfs.swing.tree.selectNode">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="node">$(node)</variable>
              <variable name="separator">$(separator)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_B" name="javax_swing_text_JTextComponent">
        <Package id="_63N" name="get">
          <Procedure id="_63O" name="getText_&lt;COMPID&gt;">
            <comment>Return the text of a textcomponent.

@return  The current text.</comment>
            <ProcedureCall id="_63P" local="true"
                           procedure="qfs.swing.text.getText"
                           retvarname="currentValue">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_63Q" retval="$(currentValue)"/>
          </Procedure>
        </Package>
        <Package id="_C" name="set">
          <Procedure id="_D" name="set_&lt;COMPID&gt;">
            <variable name="text"/>
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>Set the text of the component.

@param text	The text to set.
@param append	true, if text should be appended.
		false, if given text should overwritte current content.
@param clear		true, if textfield should be cleared before.
		false, if textfield should not be cleared before.
</comment>
            <ProcedureCall id="_E" procedure="qfs.swing.text.setText">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="text">$(text)</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_F" name="check">
          <Package id="_7E" name="text">
            <Procedure id="_G" name="checkText_&lt;COMPID&gt;">
              <variable name="text">&lt;CURRENTVALUE&gt;</variable>
              <variable name="regexp">false</variable>
              <variable name="negate">false</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check the text of the component.

@param text   the expected text.
@param regexp true, if check should use a regular expression.
	 false, if the text should match exactly.
@param negate  true, if anything but the given text is allowed in the component.
	  false, if no negative check has to be performed.
@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_H" procedure="qfs.check.checkText">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="text">$(text)</variable>
                <variable name="regexp">$(regexp)</variable>
                <variable name="negate">$(negate)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_5zw" name="org_eclipse_swt_custom_CTabFolder">
        <Package id="_5zx" name="select">
          <Procedure id="_5zy" name="selectTab_&lt;COMPID&gt;">
            <variable name="tabname"/>
            <variable name="separator">@</variable>
            <comment>Select a tab.

@param tabname	The item of the tabfolder.
@param separator	@ for addressing the tab name by text,
		% for addressing the tab by regular expression.
		Note: &amp; is not supported by this procedure.</comment>
            <ProcedureCall id="_5zz" procedure="qfs.swt.ctabfolder.selectTab">
              <variable name="tabname">$(tabname)</variable>
              <variable name="separator">$(separator)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_5z+" name="org_eclipse_swt_custom_StyledText">
        <Package id="_63Y" name="get">
          <Procedure id="_63Z" name="getText_&lt;COMPID&gt;">
            <comment>Return the text of a textcomponent.

@return  The current text.</comment>
            <ProcedureCall id="_63a" local="true"
                           procedure="qfs.swt.text.getText"
                           retvarname="currentValue">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_63b" retval="$(currentValue)"/>
          </Procedure>
        </Package>
        <Package id="_5z-" name="set">
          <Procedure id="_5+0" name="set_&lt;COMPID&gt;">
            <variable name="text"/>
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>Select the text of the textfield.

@param text	The text to set.
@param append	true, if text should be appended.
		false, if given text should overwritte current content.
@param clear		true, if textfield should be cleared before.
		false, if textfield should not be cleared before.
</comment>
            <ProcedureCall id="_5+1" procedure="qfs.swt.text.setText">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="text">$(text)</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_5+2" name="check">
          <Package id="_5+3" name="text">
            <Procedure id="_5+4" name="checkText_&lt;COMPID&gt;">
              <variable name="text">&lt;CURRENTVALUE&gt;</variable>
              <variable name="regexp">false</variable>
              <variable name="negate">false</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check the text of the component.

@param text   the expected text.
@param regexp true, if check should use a regular expression.
	 false, if the text should match exactly.
@param negate  true, if anything but the given text is allowed in the component.
	  false, if no negative check has to be performed.
@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_5+5" procedure="qfs.check.checkText">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="text">$(text)</variable>
                <variable name="regexp">$(regexp)</variable>
                <variable name="negate">$(negate)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_3g" name="org_eclipse_swt_widgets_Button">
        <Package id="_63c" name="get">
          <Procedure id="_63d" name="getValue_&lt;COMPID&gt;">
            <comment>@SWTSTYLE=CHECK
Return the value of a checkbox.
It's either 1, if box is selected of 0, if box is not selected.

@return  The current value.</comment>
            <ProcedureCall id="_63e" local="true"
                           procedure="qfs.swt.checkbox.getValue"
                           retvarname="currentValue">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_63f" retval="$(currentValue)"/>
          </Procedure>
          <Procedure id="_63g" name="getValue_&lt;COMPID&gt;">
            <comment>@SWTSTYLE=RADIO
Return the value of a radiobutton.
It's either 1, if box is selected of 0, if box is not selected.

@return  The current value.</comment>
            <ProcedureCall id="_63h" local="true"
                           procedure="qfs.swt.radiobutton.getValue"
                           retvarname="currentValue">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_63i" retval="$(currentValue)"/>
          </Procedure>
        </Package>
        <Package id="_3h" name="set">
          <comment>@SWTSTYLE=CHECK</comment>
          <Procedure id="_3i" name="set_&lt;COMPID&gt;">
            <variable name="check">true</variable>
            <comment>Select or deselect the checkbox.

@param check  true, if component should be checked.
	false, if component should not be checked.</comment>
            <ProcedureCall id="_3j" procedure="qfs.swt.checkbox.set">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="check">$(check)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_81" name="set">
          <comment>@SWTSTYLE=RADIO</comment>
          <Procedure id="_82" name="set_&lt;COMPID&gt;">
            <variable name="select">false</variable>
            <comment>Select the radiobutton.

@param select  true, if component should be checked.
	false, if component should not be checked.</comment>
            <ProcedureCall id="_83"
                           procedure="qfs.swt.general.clickAtComponent">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="click">$(select)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_84" name="press">
          <comment>@SWTSTYLE=PUSH</comment>
          <Procedure id="_85" name="press_&lt;COMPID&gt;">
            <comment>Click the button.</comment>
            <ProcedureCall id="_86" procedure="qfs.swt.general.doClick">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_3n" name="check">
          <Package id="_7S" name="enabled">
            <Procedure id="_3o" name="checkEnabledStatus_&lt;COMPID&gt;">
              <variable name="enabled">&lt;CURRENTENABLEDSTATE&gt;</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check, whether component is enabled.

@param enabled   true, if component is expected to be enabled.
	    false, if component is not expected to be enabled.

@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_3p"
                             procedure="qfs.check.checkEnabledStatus">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="enabled">$(enabled)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
          <Package id="_7T" name="selected">
            <comment>@SWTSTYLE=RADIO,CHECK</comment>
            <Procedure id="_5B" name="checkSelectedStatus_&lt;COMPID&gt;">
              <variable name="selected">&lt;CURRENTSELECTEDSTATE&gt;</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check, whether component is selected.

@param selected  true, if component is expected to be checked.
	    false, if component is not expected to be checked.

@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_5C"
                             procedure="qfs.check.checkSelectedStatus">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="selected">$(selected)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_54" name="org_eclipse_swt_widgets_Combo">
        <Package id="_63m" name="get">
          <Procedure id="_63n" name="getValue_&lt;COMPID&gt;">
            <comment>Return the value of a combobox.

@return  The current value.</comment>
            <ProcedureCall id="_63o" local="true"
                           procedure="qfs.swt.combo.getValue"
                           retvarname="currentValue">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_63p" retval="$(currentValue)"/>
          </Procedure>
        </Package>
        <Package id="_55" name="set">
          <Procedure id="_56" name="set_&lt;COMPID&gt;">
            <variable name="value"/>
            <comment>Set a value to the combobox.

@param value	The item to be selected.
</comment>
            <ProcedureCall id="_57"
                           procedure="qfs.swt.combo.setValueViaSUTScript">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="value">$(value)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_58" name="check">
          <Package id="_7V" name="text">
            <Procedure id="_59" name="checkText_&lt;COMPID&gt;">
              <variable name="text">&lt;CURRENTVALUE&gt;</variable>
              <variable name="regexp">false</variable>
              <variable name="negate">false</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check the text of the component.

@param text   the expected text.
@param regexp true, if check should use a regular expression.
	 false, if the text should match exactly.
@param negate  true, if anything but the given text is allowed in the component.
	  false, if no negative check has to be performed.
@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_5A" procedure="qfs.check.checkText">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="regexp">$(regexp)</variable>
                <variable name="negate">$(negate)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_7v" name="org_eclipse_swt_widgets_Group">
        <Package id="_7w" name="set-panel">
          <Procedure id="_7x" name="set_&lt;COMPID&gt;">
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>@FORCHILDREN
Fill the components of the composite.</comment>
            <ProcedureCall id="_5+R"
                           procedure="org_eclipse_swt_custom_StyledText.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_7y"
                           procedure="org_eclipse_swt_widgets_Text.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_7z"
                           procedure="org_eclipse_swt_widgets_Combo.set.set_&lt;CCOMPID&gt;">
              <variable name="value">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
            <ProcedureCall id="_8C"
                           procedure="org_eclipse_swt_widgets_Button.set.set_&lt;CCOMPID&gt;">
              <variable name="select">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <comment>@SWTSTYLE=RADIO</comment>
            </ProcedureCall>
            <ProcedureCall id="_1lXh"
                           procedure="org_eclipse_swt_widgets_Button.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <comment>@SWTSTYLE=CHECK</comment>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_5-4" name="set-panel-defaults">
          <Procedure id="_5-5" name="set_&lt;COMPID&gt;">
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>@FORCHILDREN
Fill the components of the composite with the recorded default values.</comment>
            <ProcedureCall id="_5-6"
                           procedure="org_eclipse_swt_custom_StyledText.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5-7"
                           procedure="org_eclipse_swt_widgets_Text.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5-8"
                           procedure="org_eclipse_swt_widgets_Combo.set.set_&lt;CCOMPID&gt;">
              <variable name="value">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
            </ProcedureCall>
            <ProcedureCall id="_5-9"
                           procedure="org_eclipse_swt_widgets_Button.set.set_&lt;CCOMPID&gt;">
              <variable name="select">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
              <comment>@SWTSTYLE=RADIO</comment>
            </ProcedureCall>
            <ProcedureCall id="_1lXi"
                           procedure="org_eclipse_swt_widgets_Button.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
              <comment>@SWTSTYLE=CHECK</comment>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_62L" name="check-panel-defaults">
          <Procedure id="_62M" name="checkText_AllElements_&lt;COMPID&gt;">
            <variable name="regexp">false</variable>
            <comment>@FORCHILDREN
Check the text of all components of the group with the recorded default values.</comment>
            <ProcedureCall id="_62N"
                           procedure="org_eclipse_swt_custom_StyledText.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_62O"
                           procedure="org_eclipse_swt_widgets_Text.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_62P"
                           procedure="org_eclipse_swt_widgets_Combo.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_62Q"
                     name="checkEnabledStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the enabled status of all components of the group with the recorded enabled states.</comment>
            <ProcedureCall id="_62R"
                           procedure="org_eclipse_swt_widgets_Button.check.enabled.checkEnabledStatus_&lt;CCOMPID&gt;">
              <variable name="enabled">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTENABLEDSTATE&gt;</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_62S"
                     name="checkSelectedStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the selected status of all components of the group with the recorded selected states.</comment>
            <ProcedureCall id="_62T"
                           procedure="org_eclipse_swt_widgets_Button.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
              <comment>@SWTSTYLE=RADIO</comment>
            </ProcedureCall>
            <ProcedureCall id="_62U"
                           procedure="org_eclipse_swt_widgets_Button.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
              <comment>@SWTSTYLE=CHECK</comment>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_62V" name="check-panel">
          <Procedure id="_62W" name="checkText_AllElements_&lt;COMPID&gt;">
            <variable name="regexp">false</variable>
            <comment>@FORCHILDREN
Check the text of all components of the group.</comment>
            <ProcedureCall id="_62X"
                           procedure="org_eclipse_swt_custom_StyledText.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_62Y"
                           procedure="org_eclipse_swt_widgets_Text.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_62Z"
                           procedure="org_eclipse_swt_widgets_Combo.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_62a"
                     name="checkEnabledStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the enabled status of all components of the group.</comment>
            <ProcedureCall id="_62b"
                           procedure="org_eclipse_swt_widgets_Button.check.enabled.checkEnabledStatus_&lt;CCOMPID&gt;">
              <variable name="enabled">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_62c"
                     name="checkSelectedStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the selected status of all components of the group.</comment>
            <ProcedureCall id="_62d"
                           procedure="org_eclipse_swt_widgets_Button.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <comment>@SWTSTYLE=RADIO</comment>
            </ProcedureCall>
            <ProcedureCall id="_62e"
                           procedure="org_eclipse_swt_widgets_Button.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <comment>@SWTSTYLE=CHECK</comment>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_60+" name="org_eclipse_swt_widgets_List">
        <Package id="_63q" name="check">
          <Package id="_63r" name="list">
            <Procedure id="_63s" name="checkItemCount_&lt;COMPID&gt;">
              <variable name="compareValue">0</variable>
              <variable name="compareMode">=</variable>
              <variable name="errorLevel">ERROR</variable>
              <variable name="appearInReport">1</variable>
              <comment>Check the number of rows of a table according to a specified comparison mode.

It uses the method list.getItemCount() to get the number.</comment>
              <ProcedureCall id="_63t" local="true"
                             procedure="qfs.swt.list.checks.checkNumberOfItems"
                             retvarname="rowcount">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="compareValue">$(compareValue)</variable>
                <variable name="compareMode">$(compareMode)</variable>
                <variable name="errorLevel">$(errorLevel)</variable>
                <variable name="appearInReport">$(appearInReport)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
        <Package id="_60-" name="count">
          <Procedure id="_610" name="getItemCount_&lt;COMPID&gt;">
            <comment>Return the number of items of the list.

@return the amount of the items of the list.</comment>
            <ProcedureCall id="_611" local="true"
                           procedure="qfs.swt.list.getItemCount"
                           retvarname="itemcount">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_612" retval="$(itemcount)"/>
          </Procedure>
        </Package>
        <Package id="_63u" name="select">
          <Procedure id="_63v" name="selectItem_&lt;COMPID&gt;">
            <variable name="item"/>
            <variable name="itemSeparator">@</variable>
            <comment>Select an item in a list.

@param item 		The item.
@param itemSeparator 	Separator to use for the item syntax. Default is @ for text values, also available &amp; for index and % for regexp.

</comment>
            <ProcedureCall id="_63w" procedure="qfs.swt.list.selectItem">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="item">$(item)</variable>
              <variable name="itemSeparator">$(itemSeparator)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_7W" name="org_eclipse_swt_widgets_MenuItem">
        <Package id="_63x" name="select-menu">
          <Package id="_63y" name="&lt;MHIERARCHY&gt;">
            <Procedure id="_63z" name="select_&lt;COMPID&gt;">
              <comment>Select the menu-item.</comment>
              <ProcedureCall id="_63+"
                             procedure="qfs.swt.menu.selectMenuItemInHierarchy">
                <variable name="menu">&lt;MHIERARCHY&gt;</variable>
                <variable name="item">${id:&lt;COMPID&gt;}</variable>
                <variable name="menustringSeparator">&lt;QFS&gt;</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_5+E" name="org_eclipse_swt_widgets_Sash">
        <Package id="_5+F" name="move">
          <Procedure id="_5+G" name="move_&lt;COMPID&gt;">
            <variable name="distance">aDistance</variable>
            <comment>Move the sash.

@param distance	The number of pixels to move the sash.</comment>
            <ProcedureCall id="_5+H" procedure="qfs.swt.sash.moveSash">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="distance">$(distance)</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_5+M" name="moveTo_&lt;COMPID&gt;">
            <variable name="target">aTarget</variable>
            <comment>Move the sash to a target position.

@param target		The target position for the sash.</comment>
            <ProcedureCall id="_5+N" procedure="qfs.swt.sash.moveSashTo">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="target">$(target)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_5n" name="org_eclipse_swt_widgets_Shell">
        <Package id="_5o" name="set-window">
          <Procedure id="_5p" name="set_&lt;COMPID&gt;">
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>@FORCHILDREN
Fill the components of the shell.</comment>
            <ProcedureCall id="_5+O"
                           procedure="org_eclipse_swt_custom_StyledText.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5q"
                           procedure="org_eclipse_swt_widgets_Text.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5r"
                           procedure="org_eclipse_swt_widgets_Combo.set.set_&lt;CCOMPID&gt;">
              <variable name="value">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
            <ProcedureCall id="_8E"
                           procedure="org_eclipse_swt_widgets_Button.set.set_&lt;CCOMPID&gt;">
              <variable name="select">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <comment>@SWTSTYLE=RADIO</comment>
            </ProcedureCall>
            <ProcedureCall id="_1lXf"
                           procedure="org_eclipse_swt_widgets_Button.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <comment>@SWTSTYLE=CHECK</comment>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_5-B" name="set-window-defaults">
          <Procedure id="_5-C" name="set_&lt;COMPID&gt;">
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>@FORCHILDREN
Fill the components of the shell with the recorded default values.</comment>
            <ProcedureCall id="_5-D"
                           procedure="org_eclipse_swt_custom_StyledText.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5-E"
                           procedure="org_eclipse_swt_widgets_Text.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5-F"
                           procedure="org_eclipse_swt_widgets_Combo.set.set_&lt;CCOMPID&gt;">
              <variable name="value">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
            </ProcedureCall>
            <ProcedureCall id="_5-G"
                           procedure="org_eclipse_swt_widgets_Button.set.set_&lt;CCOMPID&gt;">
              <variable name="select">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
              <comment>@SWTSTYLE=RADIO</comment>
            </ProcedureCall>
            <ProcedureCall id="_1lXg"
                           procedure="org_eclipse_swt_widgets_Button.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
              <comment>@SWTSTYLE=CHECK</comment>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_5-I" name="check-window-defaults">
          <Procedure id="_5-J" name="checkText_AllElements_&lt;COMPID&gt;">
            <variable name="regexp">false</variable>
            <comment>@FORCHILDREN
Check the text of all components of the shell with the recorded default values.</comment>
            <ProcedureCall id="_5-K"
                           procedure="org_eclipse_swt_custom_StyledText.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5-L"
                           procedure="org_eclipse_swt_widgets_Text.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5-M"
                           procedure="org_eclipse_swt_widgets_Combo.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_5-N"
                     name="checkEnabledStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the enabled status of all components of the shell with the recorded enabled states.</comment>
            <ProcedureCall id="_5-O"
                           procedure="org_eclipse_swt_widgets_Button.check.enabled.checkEnabledStatus_&lt;CCOMPID&gt;">
              <variable name="enabled">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTENABLEDSTATE&gt;</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_5-P"
                     name="checkSelectedStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the selected status of all components of the shell with the recorded selected states.</comment>
            <ProcedureCall id="_5-Q"
                           procedure="org_eclipse_swt_widgets_Button.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
              <comment>@SWTSTYLE=RADIO</comment>
            </ProcedureCall>
            <ProcedureCall id="_5-R"
                           procedure="org_eclipse_swt_widgets_Button.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
              <comment>@SWTSTYLE=CHECK</comment>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_5t" name="check-window">
          <Procedure id="_5u" name="checkText_AllElements_&lt;COMPID&gt;">
            <variable name="regexp">false</variable>
            <comment>@FORCHILDREN
Check the text of all components of the shell.</comment>
            <ProcedureCall id="_5v"
                           procedure="org_eclipse_swt_custom_StyledText.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5+P"
                           procedure="org_eclipse_swt_widgets_Text.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5w"
                           procedure="org_eclipse_swt_widgets_Combo.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_5x"
                     name="checkEnabledStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the enabled status of all components of the shell.</comment>
            <ProcedureCall id="_5y"
                           procedure="org_eclipse_swt_widgets_Button.check.enabled.checkEnabledStatus_&lt;CCOMPID&gt;">
              <variable name="enabled">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_5z"
                     name="checkSelectedStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the selected status of all components of the shell.</comment>
            <ProcedureCall id="_5-"
                           procedure="org_eclipse_swt_widgets_Button.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <comment>@SWTSTYLE=RADIO</comment>
            </ProcedureCall>
            <ProcedureCall id="_9L"
                           procedure="org_eclipse_swt_widgets_Button.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <comment>@SWTSTYLE=CHECK</comment>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_60" name="wait">
          <Procedure id="_61" name="waitForWindow">
            <variable name="timeout">30000</variable>
            <variable name="throwExc">true</variable>
            <comment>Wait for the shell.

@param timeout  Timeout for waiting for dialog.
@param throwExc  true, if an exception should be thrown in case of an error.
	     false, if an error should be logged in case of an error.</comment>
            <ComponentWaiter client="$(client)" component="&lt;COMPID&gt;"
                             id="_62" raise="$(throwExc)"
                             timeout="$(timeout)"/>
          </Procedure>
          <Procedure id="_61e" name="waitForWindowForAbsence">
            <variable name="timeout">30000</variable>
            <variable name="throwExc">true</variable>
            <comment>Wait till the shell disappears.

@param timeout  Timeout for disappearance of the dialog.
@param throwExc  true, if an exception should be thrown in case of an error.
	     false, if an error should be logged in case of an error.</comment>
            <ComponentWaiter absence="true" client="$(client)"
                             component="&lt;COMPID&gt;" id="_61f"
                             raise="$(throwExc)" timeout="$(timeout)"/>
          </Procedure>
        </Package>
      </Package>
      <Package id="_7O" name="org_eclipse_swt_widgets_TabFolder">
        <Package id="_7P" name="select">
          <Procedure id="_7Q" name="selectTab_&lt;COMPID&gt;">
            <variable name="separator">@</variable>
            <variable name="value"/>
            <comment>Select a tab.

@param value	The item of the tabfolder.
@param separator	@ if the tab folder should be addressed by the full text.
		&amp; if the tab folder should be addressed by an index.
		% if the tab folder should be addressed by an regular expression.</comment>
            <ProcedureCall id="_7R" procedure="qfs.swt.tabfolder.selectTab">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="value">$(value)</variable>
              <variable name="separator">$(separator)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_4l" name="org_eclipse_swt_widgets_Table">
        <Package id="_63-" name="check">
          <Package id="_640" name="table">
            <Procedure id="_641" name="checkRowCount_&lt;COMPID&gt;">
              <variable name="compareValue">0</variable>
              <variable name="compareMode">=</variable>
              <variable name="errorLevel">ERROR</variable>
              <variable name="appearInReport">1</variable>
              <comment>Check the number of rows of a table according to a specified comparison mode.
It uses the method JTable.getRowCount() to get the number.</comment>
              <ProcedureCall id="_642" local="true"
                             procedure="qfs.swt.table.checks.checkNumberOfRows"
                             retvarname="rowcount">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="compareValue">$(compareValue)</variable>
                <variable name="compareMode">$(compareMode)</variable>
                <variable name="errorLevel">$(errorLevel)</variable>
                <variable name="appearInReport">$(appearInReport)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
        <Package id="_4t" name="count">
          <Procedure id="_4u" name="getRowCount_&lt;COMPID&gt;">
            <comment>Return the number of rows of the table.

@return the amount of the rows of the table.</comment>
            <ProcedureCall id="_4v" local="true"
                           procedure="qfs.swt.table.getRowCount"
                           retvarname="rowcount">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_60y" retval="$(rowcount)"/>
          </Procedure>
          <Procedure id="_4w" name="getColumnCount_&lt;COMPID&gt;">
            <comment>Return the number of columns of the table.

@return the amount of the columns of the table.</comment>
            <ProcedureCall id="_4x" local="true"
                           procedure="qfs.swt.table.getColumnCount"
                           retvarname="colcount">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_60z" retval="$(colcount)"/>
          </Procedure>
        </Package>
        <Package id="_4m" name="select">
          <Procedure id="_4n" name="selectCell_&lt;COMPID&gt;">
            <variable name="column"/>
            <variable name="row"/>
            <variable name="columnSeparator">@</variable>
            <variable name="rowSeparator">@</variable>
            <comment>Select a cell in the table.

@param column	The column of the table.
@param row		The row of the table.
@param columnSeparator	@ if then column should be addressed by the full text.
		&amp; if the column should be addressed by an index.
		% if the column should be addressed by an regular expression.
@param rowSeparator	@ if then row should addressed by the full text.
		&amp; if the row should be addressed by an index.
		% if the row should be addressed by an regular expression.</comment>
            <ProcedureCall id="_4o" procedure="qfs.swt.table.selectCell">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="column">$(column)</variable>
              <variable name="row">$(row)</variable>
              <variable name="columnSeparator">$(columnSeparator)</variable>
              <variable name="rowSeparator">$(rowSeparator)</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_4p" name="deselectAll_&lt;COMPID&gt;">
            <comment>Deselect all rows of the table.</comment>
            <ProcedureCall id="_4q"
                           procedure="qfs.swt.table.selection.deselectAllRows">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_4r" name="selectAll_&lt;COMPID&gt;">
            <comment>Select all rows of the table.</comment>
            <ProcedureCall id="_4s"
                           procedure="qfs.swt.table.selection.selectAllRows">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_4e" name="org_eclipse_swt_widgets_Text">
        <Package id="_643" name="get">
          <Procedure id="_644" name="getText_&lt;COMPID&gt;">
            <comment>Return the text of a textcomponent.

@return  The current text.</comment>
            <ProcedureCall id="_645" local="true"
                           procedure="qfs.swt.text.getText"
                           retvarname="currentValue">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_646" retval="$(currentValue)"/>
          </Procedure>
        </Package>
        <Package id="_4f" name="set">
          <Procedure id="_4g" name="set_&lt;COMPID&gt;">
            <variable name="text"/>
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>Set the text of the textfield.

@param text	The text to set.
@param append	true, if text should be appended.
		false, if given text should overwritte current content.
@param clear		true, if textfield should be cleared before.
		false, if textfield should not be cleared before.
</comment>
            <ProcedureCall id="_4h" procedure="qfs.swt.text.setText">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="text">$(text)</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_4i" name="check">
          <Package id="_7U" name="text">
            <Procedure id="_4j" name="checkText_&lt;COMPID&gt;">
              <variable name="text">&lt;CURRENTVALUE&gt;</variable>
              <variable name="regexp">false</variable>
              <variable name="negate">false</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check the text of the component.

@param text   the expected text.
@param regexp true, if check should use a regular expression.
	 false, if the text should match exactly.
@param negate  true, if anything but the given text is allowed in the component.
	  false, if no negative check has to be performed.
@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_4k" procedure="qfs.check.checkText">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="text">$(text)</variable>
                <variable name="regexp">$(regexp)</variable>
                <variable name="negate">$(negate)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_605" name="org_eclipse_swt_widgets_ToolItem">
        <Package id="_60D" name="press">
          <Procedure id="_60E" name="press_&lt;COMPID&gt;">
            <comment>Click the tool-item.</comment>
            <ProcedureCall id="_60F" procedure="qfs.swt.general.doClick">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_60G" name="check">
          <Package id="_60H" name="enabled">
            <Procedure id="_60I" name="checkEnabledStatus_&lt;COMPID&gt;">
              <variable name="enabled">&lt;CURRENTENABLEDSTATE&gt;</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check, whether component is enabled.

@param enabled   true, if component is expected to be enabled.
	    false, if component is not expected to be enabled.

@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_60J"
                             procedure="qfs.check.checkEnabledStatus">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="enabled">$(enabled)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_4y" name="org_eclipse_swt_widgets_Tree">
        <Package id="_647" name="actions">
          <Procedure id="_50" name="expand_&lt;COMPID&gt;">
            <variable name="node"/>
            <variable name="separator">@</variable>
            <comment>Expand a node of the tree.

@param node	The node of the tree.
@param separator	@ if then node should be addressed by the full text.
		&amp; if the node should be addressed by an index.
		% if the node should be addressed by an regular expression.</comment>
            <ProcedureCall id="_51" procedure="qfs.swt.tree.expandNode">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="node">$(node)</variable>
              <variable name="separator">$(separator)</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_52" name="collapse_&lt;COMPID&gt;">
            <variable name="node"/>
            <variable name="separator">@</variable>
            <comment>Collapse a node of the tree.

@param node	The node of the tree.
@param separator	@ if then node should be addressed by the full text.
		&amp; if the node should be addressed by an index.
		% if the node should be addressed by an regular expression.</comment>
            <ProcedureCall id="_53" procedure="qfs.swt.tree.collapseNode">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="node">$(node)</variable>
              <variable name="separator">$(separator)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_4z" name="select">
          <Procedure id="_4+" name="selectNode_&lt;COMPID&gt;">
            <variable name="node"/>
            <variable name="separator">@</variable>
            <comment>Select a node of the tree.

@param node	The node of the tree.
@param separator	@ if then node should be addressed by the full text.
		&amp; if the node should be addressed by an index.
		% if the node should be addressed by an regular expression.</comment>
            <ProcedureCall id="_4-" procedure="qfs.swt.tree.selectNode">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="node">$(node)</variable>
              <variable name="separator">$(separator)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_8U" name="A">
        <Package id="_8c" name="press">
          <Procedure id="_8g" name="press_&lt;COMPID&gt;">
            <comment>Click the link.</comment>
            <ProcedureCall id="_8h" procedure="qfs.web.general.doClick">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_5yz" name="BUTTON:BUTTON">
        <Package id="_5y+" name="press">
          <Procedure id="_5y-" name="press_&lt;COMPID&gt;">
            <comment>Click the button.</comment>
            <ProcedureCall id="_5z0" procedure="qfs.web.general.doClick">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_5z5" name="BUTTON:RESET">
        <Package id="_5z6" name="press">
          <Procedure id="_5z7" name="press_&lt;COMPID&gt;">
            <comment>Click the button.</comment>
            <ProcedureCall id="_5z8" procedure="qfs.web.general.doClick">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_5z9" name="BUTTON:SUBMIT">
        <Package id="_5zA" name="press">
          <Procedure id="_5zB" name="press_&lt;COMPID&gt;">
            <comment>Click the button.</comment>
            <ProcedureCall id="_5zC" procedure="qfs.web.general.doClick">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_93" name="DOCUMENT">
        <Package id="_99" name="check-window">
          <Procedure id="_5-v"
                     name="checkSelectedStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the selected status of all components of the document.</comment>
            <ProcedureCall id="_5-w"
                           procedure="INPUT:RADIO.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
            <ProcedureCall id="_5-x"
                           procedure="INPUT:CHECKBOX.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
            <ProcedureCall id="_1lXV"
                           procedure="CheckBox.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
            <ProcedureCall id="_1lXW"
                           procedure="ToggleButton.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_5-y" name="checkText_AllElements_&lt;COMPID&gt;">
            <variable name="regexp">false</variable>
            <comment>@FORCHILDREN
Check the text of all components of the document.</comment>
            <ProcedureCall id="_5-z"
                           procedure="INPUT:TEXT.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_61b"
                           procedure="INPUT:PASSWORD.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5-+"
                           procedure="TEXTAREA.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5--"
                           procedure="SELECT.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lXc"
                           procedure="TextField.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lXd"
                           procedure="TextArea.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lXe"
                           procedure="ComboBox.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_5-n" name="check-window-defaults">
          <Procedure id="_5-s"
                     name="checkSelectedStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the selected status of all components of the document with the recorded selected states.</comment>
            <ProcedureCall id="_5-t"
                           procedure="INPUT:RADIO.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
            <ProcedureCall id="_5-u"
                           procedure="INPUT:CHECKBOX.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lXX"
                           procedure="CheckBox.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lXY"
                           procedure="ToggleButton.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_5-o" name="checkText_AllElements_&lt;COMPID&gt;">
            <variable name="regexp">false</variable>
            <comment>@FORCHILDREN
Check the text of all components of the document with the recorded default values.</comment>
            <ProcedureCall id="_5-p"
                           procedure="INPUT:TEXT.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_61a"
                           procedure="INPUT:PASSWORD.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5-q"
                           procedure="TEXTAREA.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5-r"
                           procedure="SELECT.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lXZ"
                           procedure="TextField.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lXa"
                           procedure="TextArea.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lXb"
                           procedure="ComboBox.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_94" name="set-window">
          <Procedure id="_600" name="set_&lt;COMPID&gt;">
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>@FORCHILDREN
Fill the components of the window.</comment>
            <ProcedureCall id="_601"
                           procedure="INPUT:TEXT.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_61Y"
                           procedure="INPUT:PASSWORD.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_602"
                           procedure="TEXTAREA.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_603"
                           procedure="INPUT:RADIO.set.set_&lt;CCOMPID&gt;">
              <variable name="select">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
            <ProcedureCall id="_604"
                           procedure="INPUT:CHECKBOX.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
            <ProcedureCall id="_61Z"
                           procedure="SELECT.select.select_&lt;CCOMPID&gt;">
              <variable name="value">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;_separator">@</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
            <ProcedureCall id="_1lXN"
                           procedure="TextField.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lXO"
                           procedure="TextArea.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lXP"
                           procedure="CheckBox.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
            <ProcedureCall id="_1lXQ"
                           procedure="ToggleButton.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_5-h" name="set-window-defaults">
          <Procedure id="_5-i" name="set_&lt;COMPID&gt;">
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>@FORCHILDREN
Fill the components of the document with the recorded default values.</comment>
            <ProcedureCall id="_5-j"
                           procedure="INPUT:TEXT.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_61X"
                           procedure="INPUT:PASSWORD.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5-k"
                           procedure="TEXTAREA.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5-l"
                           procedure="INPUT:RADIO.set.set_&lt;CCOMPID&gt;">
              <variable name="select">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
            <ProcedureCall id="_5-m"
                           procedure="INPUT:CHECKBOX.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
            <ProcedureCall id="_61W"
                           procedure="SELECT.select.select_&lt;CCOMPID&gt;">
              <variable name="value">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;_separator">@</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lXR"
                           procedure="TextField.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lXS"
                           procedure="TextArea.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lXT"
                           procedure="CheckBox.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lXU"
                           procedure="ToggleButton.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_9I" name="wait">
          <Procedure id="_9J" name="waitForDocument">
            <variable name="timeout">30000</variable>
            <variable name="throwExc">true</variable>
            <comment>Wait for the document.

@param timeout  Timeout for waiting for document.
@param throwExc  true, if an exception should be thrown in case of an error.
	     false, if an error should be logged in case of an error.</comment>
            <DocumentWaiter client="$(client)" component="&lt;COMPID&gt;"
                            id="_9K" raise="$(throwExc)"
                            timeout="$(timeout)"/>
          </Procedure>
        </Package>
      </Package>
      <Package id="_5zP" name="FORM">
        <Package id="_5zX" name="check-form">
          <Procedure id="_5zc"
                     name="checkSelectedStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the selected status of all components of the form.</comment>
            <ProcedureCall id="_5zd"
                           procedure="INPUT:RADIO.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
            <ProcedureCall id="_5ze"
                           procedure="INPUT:CHECKBOX.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_5zY" name="checkText_AllElements_&lt;COMPID&gt;">
            <variable name="regexp">false</variable>
            <comment>@FORCHILDREN
Check the text of all components of the form.</comment>
            <ProcedureCall id="_5zZ"
                           procedure="INPUT:TEXT.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_61V"
                           procedure="INPUT:PASSWORD.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5za"
                           procedure="TEXTAREA.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5zb"
                           procedure="SELECT.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_5-Z" name="check-form-defaults">
          <Procedure id="_5-e"
                     name="checkSelectedStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the selected status of all components of the form with the recorded selected states.</comment>
            <ProcedureCall id="_5-f"
                           procedure="INPUT:RADIO.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
            <ProcedureCall id="_5-g"
                           procedure="INPUT:CHECKBOX.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_5-a" name="checkText_AllElements_&lt;COMPID&gt;">
            <variable name="regexp">false</variable>
            <comment>@FORCHILDREN
Check the text of all components of the form with the recorded default values.</comment>
            <ProcedureCall id="_5-b"
                           procedure="INPUT:TEXT.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_61U"
                           procedure="INPUT:PASSWORD.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5-c"
                           procedure="TEXTAREA.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5-d"
                           procedure="SELECT.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_5zQ" name="set-form">
          <Procedure id="_5zR" name="set_&lt;COMPID&gt;">
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>@FORCHILDREN
Fill the components of the form.</comment>
            <ProcedureCall id="_5zS"
                           procedure="INPUT:TEXT.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_61T"
                           procedure="INPUT:PASSWORD.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5zT"
                           procedure="TEXTAREA.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5zU"
                           procedure="INPUT:RADIO.set.set_&lt;CCOMPID&gt;">
              <variable name="select">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
            <ProcedureCall id="_5zV"
                           procedure="INPUT:CHECKBOX.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
            <ProcedureCall id="_61I"
                           procedure="SELECT.select.select_&lt;CCOMPID&gt;">
              <variable name="value">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;_separator">@</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_5-S" name="set-form-defaults">
          <Procedure id="_5-T" name="set_&lt;COMPID&gt;">
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>@FORCHILDREN
Fill the components of the form with the recorded default values.</comment>
            <ProcedureCall id="_5-U"
                           procedure="INPUT:TEXT.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_61S"
                           procedure="INPUT:PASSWORD.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5-V"
                           procedure="TEXTAREA.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_5-W"
                           procedure="INPUT:RADIO.set.set_&lt;CCOMPID&gt;">
              <variable name="select">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
            <ProcedureCall id="_5-X"
                           procedure="INPUT:CHECKBOX.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
            <ProcedureCall id="_61J"
                           procedure="SELECT.select.select_&lt;CCOMPID&gt;">
              <variable name="value">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;_separator">@</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_5zD" name="INPUT:BUTTON">
        <Package id="_5zE" name="press">
          <Procedure id="_5zF" name="press_&lt;COMPID&gt;">
            <comment>Click the button.</comment>
            <ProcedureCall id="_5zG" procedure="qfs.web.general.doClick">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_8m" name="INPUT:CHECKBOX">
        <Package id="_8t" name="check">
          <Package id="_8u" name="selected">
            <Procedure id="_8v" name="checkSelectedStatus_&lt;COMPID&gt;">
              <variable name="selected">&lt;CURRENTSELECTEDSTATE&gt;</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check, whether component is selected.

@param selected  true, if component is expected to be checked.
	    false, if component is not expected to be checked.

@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_8w"
                             procedure="qfs.check.checkSelectedStatus">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="selected">$(selected)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
        <Package id="_8q" name="set">
          <Procedure id="_8r" name="set_&lt;COMPID&gt;">
            <variable name="check">true</variable>
            <comment>Select or deselect the checkbox.

@param check  true, if component should be checked.
	false, if component should not be checked.</comment>
            <ProcedureCall id="_8s" procedure="qfs.web.checkbox.set">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="check">$(check)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_5zH" name="INPUT:FILE">
        <Package id="_5zL" name="check">
          <Package id="_5zM" name="text">
            <Procedure id="_5zN" name="checkText_&lt;COMPID&gt;">
              <variable name="text">&lt;CURRENTVALUE&gt;</variable>
              <variable name="regexp">false</variable>
              <variable name="negate">false</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check the text of the component.

@param text   the expected text.
@param regexp true, if check should use a regular expression.
	 false, if the text should match exactly.
@param negate  true, if anything but the given text is allowed in the component.
	  false, if no negative check has to be performed.
@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_5zO" procedure="qfs.check.checkText">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="nameCheckType">value</variable>
                <variable name="text">$(text)</variable>
                <variable name="regexp">$(regexp)</variable>
                <variable name="negate">$(negate)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
        <Package id="_5zI" name="set">
          <Procedure id="_5zJ" name="set_&lt;COMPID&gt;">
            <variable name="text"/>
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>Set the file.

@param text	The text to set.
@param append	true, if text should be appended.
		false, if given text should overwritte current content.
@param clear		true, if textfield should be cleared before.
		false, if textfield should not be cleared before.
</comment>
            <ProcedureCall id="_5zK" procedure="qfs.web.text.setText">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="text">$(text)</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_8x" name="INPUT:RADIO">
        <Package id="_8y" name="set">
          <Procedure id="_8z" name="set_&lt;COMPID&gt;">
            <variable name="select">false</variable>
            <comment>Select the radio button.

@param select  true, if component should be checked.
	false, if component should not be checked.</comment>
            <ProcedureCall id="_8+"
                           procedure="qfs.web.general.clickAtComponent">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="click">$(select)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_8-" name="check">
          <Package id="_90" name="selected">
            <Procedure id="_91" name="checkSelectedStatus_&lt;COMPID&gt;">
              <variable name="selected">&lt;CURRENTSELECTEDSTATE&gt;</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check, whether component is selected.

@param selected  true, if component is expected to be checked.
	    false, if component is not expected to be checked.

@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_92"
                             procedure="qfs.check.checkSelectedStatus">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="selected">$(selected)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_8i" name="INPUT:RESET">
        <Package id="_8j" name="press">
          <Procedure id="_8k" name="press_&lt;COMPID&gt;">
            <comment>Click the button.</comment>
            <ProcedureCall id="_8l" procedure="qfs.web.general.doClick">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_5z1" name="INPUT:SUBMIT">
        <Package id="_5z2" name="press">
          <Procedure id="_5z3" name="press_&lt;COMPID&gt;">
            <comment>Click the button.</comment>
            <ProcedureCall id="_5z4" procedure="qfs.web.general.doClick">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_8M" name="INPUT:TEXT">
        <Package id="_8Q" name="check">
          <Package id="_8R" name="text">
            <Procedure id="_8S" name="checkText_&lt;COMPID&gt;">
              <variable name="text">&lt;CURRENTVALUE&gt;</variable>
              <variable name="regexp">false</variable>
              <variable name="negate">false</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check the text of the component.

@param text   the expected text.
@param regexp true, if check should use a regular expression.
	 false, if the text should match exactly.
@param negate  true, if anything but the given text is allowed in the component.
	  false, if no negative check has to be performed.
@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_8T" procedure="qfs.check.checkText">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="text">$(text)</variable>
                <variable name="regexp">$(regexp)</variable>
                <variable name="negate">$(negate)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
        <Package id="_8N" name="set">
          <Procedure id="_8O" name="set_&lt;COMPID&gt;">
            <variable name="text"/>
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>Set the text of the textfield.

@param text	The text to set.
@param append	true, if text should be appended.
		false, if given text should overwritte current content.
@param clear		true, if textfield should be cleared before.
		false, if textfield should not be cleared before.
</comment>
            <ProcedureCall id="_8P" procedure="qfs.web.text.setText">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="text">$(text)</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_61K" name="INPUT:PASSWORD">
        <Package id="_61O" name="check">
          <Package id="_61P" name="text">
            <Procedure id="_61Q" name="checkText_&lt;COMPID&gt;">
              <variable name="text">&lt;CURRENTVALUE&gt;</variable>
              <variable name="regexp">false</variable>
              <variable name="negate">false</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check the text of the component.

@param text   the expected text.
@param regexp true, if check should use a regular expression.
	 false, if the text should match exactly.
@param negate  true, if anything but the given text is allowed in the component.
	  false, if no negative check has to be performed.
@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_61R" procedure="qfs.check.checkText">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="text">$(text)</variable>
                <variable name="regexp">$(regexp)</variable>
                <variable name="negate">$(negate)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
        <Package id="_61L" name="set">
          <Procedure id="_61M" name="set_&lt;COMPID&gt;">
            <variable name="text"/>
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>Set the text of the password field.

@param text	The text to set.
@param append	true, if text should be appended.
		false, if given text should overwritte current content.
@param clear		true, if textfield should be cleared before.
		false, if textfield should not be cleared before.
</comment>
            <ProcedureCall id="_61N" procedure="qfs.web.text.setText">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_5yf" name="SELECT">
        <Package id="_64D" name="count">
          <Procedure id="_64E" name="getItemCount_&lt;COMPID&gt;">
            <comment>Return the number of items of the list.

@return the amount of the items of the list.</comment>
            <ProcedureCall id="_64F" local="true"
                           procedure="qfs.web.select.getItemCount"
                           retvarname="itemcount">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_64G" retval="$(itemcount)"/>
          </Procedure>
        </Package>
        <Package id="_5yg" name="check">
          <Package id="_5yk" name="text">
            <Procedure id="_5yl" name="checkText_&lt;COMPID&gt;">
              <variable name="text">&lt;CURRENTVALUE&gt;</variable>
              <variable name="regexp">false</variable>
              <variable name="negate">false</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check the text of the component.

@param text   the expected text.
@param regexp true, if check should use a regular expression.
	 false, if the text should match exactly.
@param negate  true, if anything but the given text is allowed in the component.
	  false, if no negative check has to be performed.
@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_5ym" procedure="qfs.check.checkText">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="text">$(text)</variable>
                <variable name="regexp">$(regexp)</variable>
                <variable name="negate">$(negate)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
          <Package id="_64A" name="items">
            <Procedure id="_64B" name="checkItemCount_&lt;COMPID&gt;">
              <variable name="compareValue">0</variable>
              <variable name="compareMode">=</variable>
              <variable name="errorLevel">ERROR</variable>
              <variable name="appearInReport">1</variable>
              <comment>Check the number of rows of a table according to a specified comparison mode.

It uses the method list.getItemCount() to get the number.</comment>
              <ProcedureCall id="_1jwN" local="true"
                             procedure="qfs.web.select.getItemCount"
                             retvarname="itemcount">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
              </ProcedureCall>
              <ProcedureCall id="_1jwL"
                             procedure="qfs.check.compareTwoNumbers">
                <variable name="expected">$(compareValue)</variable>
                <variable name="checkMessage">Compare number of items of list '${id:&lt;COMPID&gt;}'.</variable>
                <variable name="got">$(itemcount)</variable>
                <variable name="compareMode">$(compareMode)</variable>
                <variable name="errorLevel">$(errorLevel)</variable>
                <variable name="appearInReport">$(appearInReport)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
        <Package id="_61E" name="select">
          <Procedure id="_61F" name="select_&lt;COMPID&gt;">
            <variable name="value"/>
            <variable name="separator">@</variable>
            <comment>Select a value in the selection.

@param value	The item of the selection.
@param separator	@ if the item should be addressed by the full text.
		&amp; if the item should be addressed by an index.
		% if the item should be addressed by an regular expression.</comment>
            <ProcedureCall id="_648" procedure="qfs.web.select.selectValue">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="separator">$(separator)</variable>
              <variable name="value">$(value)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_5yp" name="TEXTAREA">
        <Package id="_5yt" name="check">
          <Package id="_5yu" name="text">
            <Procedure id="_5yv" name="checkText_&lt;COMPID&gt;">
              <variable name="text">&lt;CURRENTVALUE&gt;</variable>
              <variable name="regexp">false</variable>
              <variable name="negate">false</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check the text of the component.

@param text   the expected text.
@param regexp true, if check should use a regular expression.
	 false, if the text should match exactly.
@param negate  true, if anything but the given text is allowed in the component.
	  false, if no negative check has to be performed.
@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_5yw" procedure="qfs.check.checkText">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="text">$(text)</variable>
                <variable name="regexp">$(regexp)</variable>
                <variable name="negate">$(negate)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
        <Package id="_5yq" name="set">
          <Procedure id="_5yr" name="set_&lt;COMPID&gt;">
            <variable name="text"/>
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>Set the text of the textarea.

@param text	The text to set.
@param append	true, if text should be appended.
		false, if given text should overwritte current content.
@param clear		true, if textfield should be cleared before.
		false, if textfield should not be cleared before.
</comment>
            <ProcedureCall id="_5ys" procedure="qfs.web.text.setText">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_1jwS" name="Button">
        <Package id="_1jwT" name="press">
          <Procedure id="_1jwU" name="press_&lt;COMPID&gt;">
            <comment>Click the button.</comment>
            <ProcedureCall id="_1jwV"
                           procedure="qfs.&lt;ENGINE2&gt;.general.doClick">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1jwW" name="check">
          <Package id="_1jwX" name="enabled">
            <Procedure id="_1jwY" name="checkEnabledStatus_&lt;COMPID&gt;">
              <variable name="enabled">&lt;CURRENTENABLEDSTATE&gt;</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check, whether component is enabled.

@param enabled   true, if component is expected to be enabled.
	    false, if component is not expected to be enabled.

@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_1jwZ"
                             procedure="qfs.check.checkEnabledStatus">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="enabled">$(enabled)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_1jwa" name="CheckBox">
        <Package id="_1jwb" name="get">
          <Procedure id="_1jwc" name="getValue_&lt;COMPID&gt;">
            <comment>Return the value of a checkbox.
It's either 1, if box is selected of 0, if box is not selected.

@return  The current value.</comment>
            <ProcedureCall id="_1jwd" local="true"
                           procedure="qfs.&lt;ENGINE2&gt;.checkbox.getValue"
                           retvarname="currentValue">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_1jwe" retval="$(currentValue)"/>
          </Procedure>
        </Package>
        <Package id="_1jwf" name="set">
          <Procedure id="_1jwg" name="set_&lt;COMPID&gt;">
            <variable name="check">true</variable>
            <comment>Select or deselect the checkbox.

@param check  true, if checkbox should be checked.
	false, if checkbox should not be checked.</comment>
            <ProcedureCall id="_1jwh"
                           procedure="qfs.&lt;ENGINE2&gt;.checkbox.set">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="check">$(check)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1jwi" name="check">
          <Package id="_1jwj" name="selected">
            <Procedure id="_1jwk" name="checkSelectedStatus_&lt;COMPID&gt;">
              <variable name="selected">&lt;CURRENTSELECTEDSTATE&gt;</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check, whether checkbox is selected.

@param selected  true, if checkbox is expected to be checked.
	    false, if checkbox is not expected to be checked.

@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_1jwl"
                             procedure="qfs.check.checkSelectedStatus">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="selected">$(selected)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_1jwr" name="ComboBox">
        <Package id="_1jws" name="get">
          <Procedure id="_1jwt" name="getValue_&lt;COMPID&gt;">
            <comment>Return the value of a combobox.

@return  The current value.</comment>
            <FetchTextStep client="$(client)" component="&lt;COMPID&gt;"
                           id="_1j+P" local="true" varname="currentValue"/>
            <ReturnStep id="_1jwv" retval="$(currentValue)"/>
          </Procedure>
        </Package>
        <Package id="_1jwz" name="check">
          <Package id="_1jw+" name="text">
            <Procedure id="_1jw-" name="checkText_&lt;COMPID&gt;">
              <variable name="text">&lt;CURRENTVALUE&gt;</variable>
              <variable name="regexp">false</variable>
              <variable name="negate">false</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check the text of the component.

@param text   the expected text.
@param regexp true, if check should use a regular expression.
	 false, if the text should match exactly.
@param negate  true, if anything but the given text is allowed in the component.
	  false, if no negative check has to be performed.
@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_1jx0" procedure="qfs.check.checkText">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="regexp">$(regexp)</variable>
                <variable name="negate">$(negate)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_1lWx" name="Link">
        <Package id="_1lWy" name="press">
          <Procedure id="_1lWz" name="press_&lt;COMPID&gt;">
            <comment>Click the button.</comment>
            <ProcedureCall id="_1lW+"
                           procedure="qfs.&lt;ENGINE2&gt;.general.doClick">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1lW-" name="check">
          <Package id="_1lX0" name="enabled">
            <comment>@CONDITION  jython "&lt;COMPEF-qfs:systemclass&gt;" != "A"</comment>
            <Procedure id="_1lX1" name="checkEnabledStatus_&lt;COMPID&gt;">
              <variable name="enabled">&lt;CURRENTENABLEDSTATE&gt;</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check, whether component is enabled.

@param enabled   true, if component is expected to be enabled.
	    false, if component is not expected to be enabled.

@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_1lX2"
                             procedure="qfs.check.checkEnabledStatus">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="enabled">$(enabled)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_1jyd" name="List">
        <Package id="_1jye" name="check">
          <Package id="_1jyf" name="list">
            <Procedure id="_1jyg" name="checkItemCount_&lt;COMPID&gt;">
              <variable name="compareValue">0</variable>
              <variable name="compareMode">=</variable>
              <variable name="errorLevel">ERROR</variable>
              <variable name="appearInReport">1</variable>
              <comment>Check the number of rows of a table according to a specified comparison mode.</comment>
              <FetchIndexStep client="$(client)"
                              component="&lt;COMPID&gt;&amp;-1" id="_1lWd"
                              local="true" varname="lastRow"/>
              <ProcedureCall id="_1lWe"
                             procedure="qfs.check.compareTwoNumbers">
                <variable name="expected">$(compareValue)</variable>
                <variable name="checkMessage">Compare number of items of list '${id:&lt;COMPID&gt;}'.</variable>
                <variable name="got">$[$(lastRow) + 1]</variable>
                <variable name="compareMode">$(compareMode)</variable>
                <variable name="errorLevel">$(errorLevel)</variable>
                <variable name="appearInReport">$(appearInReport)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
        <Package id="_1jyi" name="count">
          <Procedure id="_1jyj" name="getItemCount_&lt;COMPID&gt;">
            <comment>Return the number of items of the list.

@return  the amount of items of the list.</comment>
            <FetchIndexStep client="$(client)"
                            component="&lt;COMPID&gt;&amp;-1" id="_1lWb"
                            local="true" varname="lastRow"/>
            <ReturnStep id="_1lWc" retval="$[$(lastRow) + 1]"/>
          </Procedure>
        </Package>
        <Package id="_1jym" name="select">
          <Procedure id="_1jyn" name="selectItem_&lt;COMPID&gt;">
            <variable name="item"/>
            <variable name="itemSeparator">@</variable>
            <comment>Select an item in a list.

@param item 		The item.
@param itemSeparator 	Separator to use for the item syntax. Default is @ for text values, also available &amp; for index and % for regexp.

</comment>
            <MouseEventStep clicks="1" client="$(client)"
                            component="&lt;COMPID&gt;$(itemSeparator)$(item)"
                            event="MOUSE_MPRC" id="_1jvI" modifiers="16"/>
          </Procedure>
        </Package>
      </Package>
      <Package id="_1jzL" name="RadioButton">
        <Package id="_1jzM" name="get">
          <Procedure id="_1jzN" name="getValue_&lt;COMPID&gt;">
            <comment>Return the value of a radio button.
It's either 1, if radio button is selected of 0, if radio button is not selected.

@return  The current value.</comment>
            <ProcedureCall id="_1jzO" local="true"
                           procedure="qfs.&lt;ENGINE2&gt;.radiobutton.getValue"
                           retvarname="currentValue">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_1jzP" retval="$(currentValue)"/>
          </Procedure>
        </Package>
        <Package id="_1jzQ" name="set">
          <Procedure id="_1jzR" name="set_&lt;COMPID&gt;">
            <variable name="select">false</variable>
            <comment>Select or deselect a radiobutton.

@param select	true, if radiobutton should be selected.
	false, if radiobutton should not be selected.</comment>
            <IfSequence id="_1lWg" test="$(select)">
              <ProcedureCall id="_1jzS"
                             procedure="qfs.&lt;ENGINE2&gt;.radiobutton.select">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
              </ProcedureCall>
            </IfSequence>
          </Procedure>
        </Package>
        <Package id="_1jzT" name="check">
          <Package id="_1jzU" name="selected">
            <Procedure id="_1jzV" name="checkSelectedStatus_&lt;COMPID&gt;">
              <variable name="selected">&lt;CURRENTSELECTEDSTATE&gt;</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check, whether radiobutton is selected.

@param selected  true, if radiobutton is expected to be checked.
	    false, if radiobutton is not expected to be checked.

@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_1jzW"
                             procedure="qfs.check.checkSelectedStatus">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="selected">$(selected)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_1jzj" name="TabPanel">
        <Package id="_1jzk" name="select">
          <Procedure id="_1jzl" name="selectTab_&lt;COMPID&gt;">
            <variable name="separator">@</variable>
            <variable name="value"/>
            <comment>Select a tab.

@param value	The item of the tabfolder.
@param separator	@ if the tab folder should be addressed by the full text.
		&amp; if the tab folder should be addressed by an index.
		% if the tab folder should be addressed by an regular expression.</comment>
            <ProcedureCall id="_1jzm"
                           procedure="qfs.&lt;ENGINE2&gt;.general.doClick">
              <variable name="id">${id:&lt;COMPID&gt;}$(separator)$(value)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_1jzn" name="Table">
        <Package id="_1jzo" name="check">
          <Package id="_1jzp" name="table">
            <Procedure id="_1jzq" name="checkRowCount_&lt;COMPID&gt;">
              <variable name="compareValue">0</variable>
              <variable name="compareMode">=</variable>
              <variable name="errorLevel">ERROR</variable>
              <variable name="appearInReport">1</variable>
              <comment>Check the number of rows of a table according to a specified comparison mode.
It uses the method JTable.getRowCount() to get the number.</comment>
              <ProcedureCall id="_1jzr" local="true"
                             procedure="qfs.&lt;ENGINE2&gt;.table.checks.checkNumberOfRows"
                             retvarname="rowcount">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="compareValue">$(compareValue)</variable>
                <variable name="compareMode">$(compareMode)</variable>
                <variable name="errorLevel">$(errorLevel)</variable>
                <variable name="appearInReport">$(appearInReport)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
        <Package id="_1jzs" name="count">
          <Procedure id="_1jzt" name="getRowCount_&lt;COMPID&gt;">
            <comment>Return the number of rows of the table.

@return the amount of the rows of the table.</comment>
            <ProcedureCall id="_1jzu" local="true"
                           procedure="qfs.&lt;ENGINE2&gt;.table.getRowCount"
                           retvarname="rowcount">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_1jzv" retval="$(rowcount)"/>
          </Procedure>
          <Procedure id="_1jzw" name="getColumnCount_&lt;COMPID&gt;">
            <comment>Return the number of columns of the table.

@return the amount of the columns of the table.</comment>
            <ProcedureCall id="_1jzx" local="true"
                           procedure="qfs.&lt;ENGINE2&gt;.table.getColumnCount"
                           retvarname="colcount">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_1jzy" retval="$(colcount)"/>
          </Procedure>
        </Package>
        <Package id="_1jzz" name="select">
          <Procedure id="_1jz+" name="selectCell_&lt;COMPID&gt;">
            <variable name="column"/>
            <variable name="row"/>
            <variable name="columnSeparator">@</variable>
            <variable name="rowSeparator">@</variable>
            <comment>Select a cell in the table.

@param column	The column of the table.
@param row		The row of the table.
@param columnSeparator	@ if then column should be addressed by the full text.
		&amp; if the column should be addressed by an index.
		% if the column should be addressed by an regular expression.
@param rowSeparator	@ if then row should addressed by the full text.
		&amp; if the row should be addressed by an index.
		% if the row should be addressed by an regular expression.</comment>
            <ProcedureCall id="_1jz-"
                           procedure="qfs.&lt;ENGINE2&gt;.table.selectCell">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="column">$(column)</variable>
              <variable name="row">$(row)</variable>
              <variable name="columnSeparator">$(columnSeparator)</variable>
              <variable name="rowSeparator">$(rowSeparator)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_1j+D" name="TextArea">
        <Package id="_1j+E" name="get">
          <Procedure id="_1j+F" name="getText_&lt;COMPID&gt;">
            <comment>Return the text of a textcomponent.

@return  The current text.</comment>
            <ProcedureCall id="_1j+G" local="true"
                           procedure="qfs.&lt;ENGINE2&gt;.text.getText"
                           retvarname="currentValue">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_1j+H" retval="$(currentValue)"/>
          </Procedure>
        </Package>
        <Package id="_1j+I" name="set">
          <Procedure id="_1j+J" name="set_&lt;COMPID&gt;">
            <variable name="text"/>
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>Set the text of the component.

@param text	The text to set.
@param append	true, if text should be appended.
		false, if given text should overwritte current content.
@param clear		true, if textfield should be cleared before.
		false, if textfield should not be cleared before.
</comment>
            <ProcedureCall id="_1j+K"
                           procedure="qfs.&lt;ENGINE2&gt;.text.setText">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="text">$(text)</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1j+L" name="check">
          <Package id="_1j+M" name="text">
            <Procedure id="_1j+N" name="checkText_&lt;COMPID&gt;">
              <variable name="text">&lt;CURRENTVALUE&gt;</variable>
              <variable name="regexp">false</variable>
              <variable name="negate">false</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check the text of the component.

@param text   the expected text.
@param regexp true, if check should use a regular expression.
	 false, if the text should match exactly.
@param negate  true, if anything but the given text is allowed in the component.
	  false, if no negative check has to be performed.
@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_1j+O" procedure="qfs.check.checkText">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="text">$(text)</variable>
                <variable name="regexp">$(regexp)</variable>
                <variable name="negate">$(negate)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_1lWh" name="TextField">
        <Package id="_1lWi" name="get">
          <Procedure id="_1lWj" name="getText_&lt;COMPID&gt;">
            <comment>Return the text of a textcomponent.

@return  The current text.</comment>
            <ProcedureCall id="_1lWk" local="true"
                           procedure="qfs.&lt;ENGINE2&gt;.text.getText"
                           retvarname="currentValue">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_1lWl" retval="$(currentValue)"/>
          </Procedure>
        </Package>
        <Package id="_1lWm" name="set">
          <Procedure id="_1lWn" name="set_&lt;COMPID&gt;">
            <variable name="text"/>
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>Set the text of the component.

@param text	The text to set.
@param append	true, if text should be appended.
		false, if given text should overwritte current content.
@param clear		true, if textfield should be cleared before.
		false, if textfield should not be cleared before.
</comment>
            <ProcedureCall id="_1lWo"
                           procedure="qfs.&lt;ENGINE2&gt;.text.setText">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="text">$(text)</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1lWp" name="check">
          <Package id="_1lWq" name="text">
            <Procedure id="_1lWr" name="checkText_&lt;COMPID&gt;">
              <variable name="text">&lt;CURRENTVALUE&gt;</variable>
              <variable name="regexp">false</variable>
              <variable name="negate">false</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check the text of the component.

@param text   the expected text.
@param regexp true, if check should use a regular expression.
	 false, if the text should match exactly.
@param negate  true, if anything but the given text is allowed in the component.
	  false, if no negative check has to be performed.
@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_1lWs" procedure="qfs.check.checkText">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="text">$(text)</variable>
                <variable name="regexp">$(regexp)</variable>
                <variable name="negate">$(negate)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_1lXj" name="Panel:TitledPanel">
        <Package id="_1lXk" name="set-panel">
          <Procedure id="_1lXl" name="set_&lt;COMPID&gt;">
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>@FORCHILDREN
Fill the components of the dialog.</comment>
            <ProcedureCall id="_1lXm"
                           procedure="TextField.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lXn"
                           procedure="TextArea.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lXo"
                           procedure="CheckBox.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
            <ProcedureCall id="_1lXp"
                           procedure="ToggleButton.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1lXq" name="check-panel">
          <Procedure id="_1lXr" name="checkText_AllElements_&lt;COMPID&gt;">
            <variable name="regexp">false</variable>
            <comment>@FORCHILDREN
Check the text of all components of the dialog.</comment>
            <ProcedureCall id="_1lXs"
                           procedure="TextField.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lXt"
                           procedure="TextArea.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lXu"
                           procedure="ComboBox.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1lXv"
                     name="checkEnabledStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the enabled status of all components of the dialog.</comment>
            <ProcedureCall id="_1lXw"
                           procedure="Button.check.enabled.checkEnabledStatus_&lt;CCOMPID&gt;">
              <variable name="enabled">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1lXx"
                     name="checkSelectedStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the selected status of all components of the dialog.</comment>
            <ProcedureCall id="_1lXy"
                           procedure="CheckBox.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
            <ProcedureCall id="_1lXz"
                           procedure="ToggleButton.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1lYw" name="check-panel-defaults">
          <Procedure id="_1lYx" name="checkText_AllElements_&lt;COMPID&gt;">
            <variable name="regexp">false</variable>
            <comment>@FORCHILDREN
Check the text of all components of the panel with the recorded default values.</comment>
            <ProcedureCall id="_1lZ7"
                           procedure="TextField.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lZ8"
                           procedure="TextArea.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lZ9"
                           procedure="ComboBox.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1lY+"
                     name="checkEnabledStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the enabled status of all components of the panel with the recorded enabled states.</comment>
            <ProcedureCall id="_1lZA"
                           procedure="Button.check.enabled.checkEnabledStatus_&lt;CCOMPID&gt;">
              <variable name="enabled">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1lZ0"
                     name="checkSelectedStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the selected status of all components of the panel with the recorded selected states.</comment>
            <ProcedureCall id="_1lZB"
                           procedure="CheckBox.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
            <ProcedureCall id="_1lZC"
                           procedure="ToggleButton.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1lZ2" name="set-panel-defaults">
          <Procedure id="_1lZ3" name="set_&lt;COMPID&gt;">
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>@FORCHILDREN
Fill the components of the panel with the recorded default values.</comment>
            <ProcedureCall id="_1lZD"
                           procedure="TextField.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lZE"
                           procedure="TextArea.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lZF"
                           procedure="CheckBox.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lZG"
                           procedure="ToggleButton.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_1lX3" name="ToggleButton">
        <Package id="_1lX4" name="get">
          <Procedure id="_1lX5" name="getValue_&lt;COMPID&gt;">
            <comment>Return the value of a togglebutton.
It's either 1, if box is selected of 0, if box is not selected.

@return  The current value.</comment>
            <ProcedureCall id="_1lX6" local="true"
                           procedure="qfs.&lt;ENGINE2&gt;.checkbox.getValue"
                           retvarname="currentValue">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
            <ReturnStep id="_1lX7" retval="$(currentValue)"/>
          </Procedure>
        </Package>
        <Package id="_1lX8" name="set">
          <Procedure id="_1lX9" name="set_&lt;COMPID&gt;">
            <variable name="check">true</variable>
            <comment>Select or deselect the togglebutton.

@param check  true, if togglebutton should be checked.
	false, if togglebutton should not be checked.</comment>
            <ProcedureCall id="_1lXA"
                           procedure="qfs.&lt;ENGINE2&gt;.checkbox.set">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
              <variable name="check">$(check)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1lXB" name="check">
          <Package id="_1lXC" name="selected">
            <Procedure id="_1lXD" name="checkSelectedStatus_&lt;COMPID&gt;">
              <variable name="selected">&lt;CURRENTSELECTEDSTATE&gt;</variable>
              <variable name="throwExc">false</variable>
              <variable name="reportName"/>
              <variable name="timeout">3000</variable>
              <comment>Check, whether togglebutton is selected.

@param selected  true, if togglebutton is expected to be checked.
	    false, if togglebutton is not expected to be checked.

@param throwExc  true, if an exception should be thrown on failure.
	     false, if an error should be logged on failure.
@param reportName 	Name for the check in the report.
@param timeout	Timeout for the checked condition to happen.</comment>
              <ProcedureCall id="_1lXE"
                             procedure="qfs.check.checkSelectedStatus">
                <variable name="id">${id:&lt;COMPID&gt;}</variable>
                <variable name="selected">$(selected)</variable>
                <variable name="throwExc">$(throwExc)</variable>
                <variable name="reportName">$(reportName)</variable>
                <variable name="timeout">$(timeout)</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_1lWt" name="ToolBarItem">
        <Package id="_1lWu" name="select-toolbar">
          <Procedure id="_1lWv" name="select_&lt;COMPID&gt;">
            <comment>Select the toolbar-item.</comment>
            <ProcedureCall id="_1lWw"
                           procedure="qfs.&lt;ENGINE2&gt;.general.doClick">
              <variable name="id">${id:&lt;COMPID&gt;}</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_1j+4" name="Tree">
        <Package id="_1j+A" name="select">
          <Procedure id="_1j+B" name="selectNode_&lt;COMPID&gt;">
            <variable name="node"/>
            <variable name="separator">@</variable>
            <comment>Select a node of the tree.

@param node	The node of the tree.
@param separator	@ if then node should be addressed by the full text.
		&amp; if the node should be addressed by an index.
		% if the node should be addressed by an regular expression.</comment>
            <ProcedureCall id="_1j+C"
                           procedure="qfs.&lt;ENGINE2&gt;.general.doClick">
              <variable name="id">${id:&lt;COMPID&gt;}$(separator)$(node)</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_1jx1" name="Window">
        <Package id="_1jx2" name="set-window">
          <Procedure id="_1jx3" name="set_&lt;COMPID&gt;">
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>@FORCHILDREN
Fill the components of the dialog.</comment>
            <ProcedureCall id="_1jx4"
                           procedure="TextField.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lXF"
                           procedure="TextArea.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1jx6"
                           procedure="CheckBox.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
            <ProcedureCall id="_1lXG"
                           procedure="ToggleButton.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1jx7" name="check-window">
          <Procedure id="_1jx8" name="checkText_AllElements_&lt;COMPID&gt;">
            <variable name="regexp">false</variable>
            <comment>@FORCHILDREN
Check the text of all components of the dialog.</comment>
            <ProcedureCall id="_1jx9"
                           procedure="TextField.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lXL"
                           procedure="TextArea.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1jxA"
                           procedure="ComboBox.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1jxB"
                     name="checkEnabledStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the enabled status of all components of the dialog.</comment>
            <ProcedureCall id="_1jxC"
                           procedure="Button.check.enabled.checkEnabledStatus_&lt;CCOMPID&gt;">
              <variable name="enabled">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1jxD"
                     name="checkSelectedStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the selected status of all components of the dialog.</comment>
            <ProcedureCall id="_1jxE"
                           procedure="CheckBox.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
            <ProcedureCall id="_1lXM"
                           procedure="ToggleButton.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;"/>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1lYZ" name="set-window-defaults">
          <Procedure id="_1lYa" name="set_&lt;COMPID&gt;">
            <variable name="append">false</variable>
            <variable name="clear">true</variable>
            <comment>@FORCHILDREN
Fill the components of the frame with the recorded default values.</comment>
            <ProcedureCall id="_1lYm"
                           procedure="TextField.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lYn"
                           procedure="TextArea.set.set_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="append">$(append)</variable>
              <variable name="clear">$(clear)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lYo"
                           procedure="CheckBox.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lYp"
                           procedure="ToggleButton.set.set_&lt;CCOMPID&gt;">
              <variable name="check">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1lYe" name="check-window-defaults">
          <Procedure id="_1lYf" name="checkText_AllElements_&lt;COMPID&gt;">
            <variable name="regexp">false</variable>
            <comment>@FORCHILDREN
Check the text of all components of the frame with the recorded default values.</comment>
            <ProcedureCall id="_1lYq"
                           procedure="TextField.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lYr"
                           procedure="TextArea.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lYs"
                           procedure="ComboBox.check.text.checkText_&lt;CCOMPID&gt;">
              <variable name="text">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTVALUE&gt;</variable>
              <variable name="regexp">$(regexp)</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1lYi"
                     name="checkEnabledStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the enabled status of all components of the frame with the recorded enabled states.</comment>
            <ProcedureCall id="_1lYt"
                           procedure="Button.check.enabled.checkEnabledStatus_&lt;CCOMPID&gt;">
              <variable name="enabled">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTENABLEDSTATE&gt;</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1lYk"
                     name="checkSelectedStatus_AllElements_&lt;COMPID&gt;">
            <comment>@FORCHILDREN
Check the selected status of all components of the frame with the recorded selected states.</comment>
            <ProcedureCall id="_1lYu"
                           procedure="CheckBox.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lYv"
                           procedure="ToggleButton.check.selected.checkSelectedStatus_&lt;CCOMPID&gt;">
              <variable name="selected">$(&lt;CCOMPID&gt;)</variable>
              <variable name="&lt;CCOMPID&gt;">&lt;CCURRENTSELECTEDSTATE&gt;</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1jxU" name="wait">
          <Procedure id="_1jxV" name="waitForWindow">
            <variable name="timeout">30000</variable>
            <variable name="throwExc">true</variable>
            <comment>Wait for the dialog.

@param timeout  Timeout for waiting for dialog.
@param throwExc  true, if an exception should be thrown in case of an error.
	     false, if an error should be logged in case of an error.</comment>
            <ComponentWaiter client="$(client)" component="&lt;COMPID&gt;"
                             id="_1jxW" raise="$(throwExc)"
                             timeout="$(timeout)"/>
          </Procedure>
          <Procedure id="_1jxX" name="waitForWindowForAbsence">
            <variable name="timeout">30000</variable>
            <variable name="throwExc">true</variable>
            <comment>Wait till the dialog disappears.

@param timeout  Timeout for disappearance of the dialog.
@param throwExc  true, if an exception should be thrown in case of an error.
	     false, if an error should be logged in case of an error.</comment>
            <ComponentWaiter absence="true" client="$(client)"
                             component="&lt;COMPID&gt;" id="_1jxY"
                             raise="$(throwExc)" timeout="$(timeout)"/>
          </Procedure>
        </Package>
      </Package>
    </Package>
  </PackageRoot>
  <ExtraSequence id="_5"/>
  <WindowList id="_6"/>
</RootStep>
