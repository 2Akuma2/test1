<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE RootStep>
<RootStep id="_0" name="root"
          signature="302C021428F0B968AE39D60B3C4738C840432942C09500F702140C5248B1F1890AFD422DF64D185DED9E27EC8C54"
          version="6.0.3">
  <include>qfs.qft</include>
  <comment>Sample test-suite showing the usage of simple keywords as atomic procedures.
Those atomic procedures make use of generic components.
That enables us to use the keywords immediately without recording them.

Keywords are implemented as procedures representing individual actions like clicks.
The steps of the test-case itself are described in the Excel file 'keywords-generic.xlsx' in the same folder.

Details can be found in the manual chapter "Keyword driven Testing".

@author QFS, mm
@since 4.1</comment>
  <TestSet id="_Kv" name="Scenario">
    <DependencyReference id="_3ON" reference="dependencies.sutStarted"/>
    <TestCase id="_3NN" name="Create vehicle">
      <comment>Test-case to create a vehicle.
Test-steps and data come from the specified Excel-file.

@author QFS, mm
@since 4.1</comment>
      <TestStep id="_3Mt" name="Walk through test-steps">
        <DataDriver id="_3Mu" name="steps from excel">
          <ExcelDataBinder excelfile="keywords-generic.xlsx" id="_3Mv"
                           name="steps from excel"
                           sheetname="testcase-createvehicle-generic"/>
        </DataDriver>
        <TestStep id="_3Nv" name="Generic test-step"
                  reportname="$(teststep) for $(target) with $(value)">
          <ProcedureCall id="_3Mk" procedure="generic.$(teststep)"/>
        </TestStep>
      </TestStep>
    </TestCase>
  </TestSet>
  <PackageRoot id="_4">
    <Package id="_9z" name="dependencies">
      <comment>Package for required dependencies.

@author QFS,mm
@since 4.1</comment>
      <Dependency id="_7b" name="sutStarted">
        <comment>Manage the start and stop process of the SUT.

@author QFS,mm
@since 4.1</comment>
        <SetupSequence id="_7c" name="start SUT">
          <SetGlobalStep id="_IP" varname="client">
            <default>cardemo-generic</default>
          </SetGlobalStep>
          <ClientWaiter client="$(client)" id="_1p6G" local="true"
                        raise="false" resvarname="isSUTRunning" timeout="1">
            <comment>This node checks whether the SUT is already running. The result of this check will be stored in the variable isSUTRunning. The variable itself can contain true if SUT is already running or false if SUT is not running. This variable will be used in the following 'If' node.</comment>
          </ClientWaiter>
          <IfSequence id="_1p6H" name="Launch SUT if not running"
                      test="not $(isSUTRunning)">
            <ProcedureCall id="_3Ad" procedure="startStop.startSUT"/>
          </IfSequence>
        </SetupSequence>
        <CleanupSequence id="_7e" name="stop SUT">
          <TryStep id="_9N" name="stop">
            <ProcedureCall id="_9O" procedure="startStop.stopSUT"/>
            <CatchSequence exception="TestException" id="_9P" maxerror="0"
                           name="already stopped"/>
          </TryStep>
        </CleanupSequence>
      </Dependency>
    </Package>
    <Package id="_5i" name="startStop">
      <comment>Package for procedures to start and stop the SUT.

@author QFS,mm
@since 4.1</comment>
      <Procedure id="_HG" name="startSUT">
        <comment>Launch the SUT.

@author QFS,mm
@since 4.1</comment>
        <IfSequence id="_HI" name="Windows?" test="${qftest:windows}">
          <SUTClientStarter client="$(client)"
                            directory="${qftest:dir.version}/demo/carconfig"
                            executable="${qftest:dir.version}/demo/carconfig/CarConfig.cmd"
                            id="_B9">
            <parameter>en</parameter>
          </SUTClientStarter>
          <ElseSequence id="_HJ" name="Unix">
            <SUTClientStarter client="$(client)"
                              directory="${qftest:dir.version}/demo/carconfig"
                              executable="${qftest:dir.version}/demo/carconfig/CarConfig.sh"
                              id="_HK">
              <parameter>en</parameter>
            </SUTClientStarter>
          </ElseSequence>
        </IfSequence>
        <ClientWaiter client="$(client)" id="_HL"/>
        <ComponentWaiter client="$(client)" component="JCarConfigurator"
                         id="_HM" timeout="30000"/>
        <BasicSequence id="_3OX" name="additional modifications for QF-Test">
          <ClientScriptStep client="$(client)" id="_3Kr"
                            name="Modify QF-Test option in order to get proper qfs:label recordings">
            <code>rc.setOption("QfsLabelWithHierarchy", True)</code>
          </ClientScriptStep>
        </BasicSequence>
      </Procedure>
      <Procedure id="_5d" name="stopSUT">
        <comment>Stop the SUT via the menu.

@author QFS,mm
@since 4.1</comment>
        <ProcedureCall id="_3Pj" procedure="generic.selectMenu">
          <variable name="target">File</variable>
        </ProcedureCall>
        <ProcedureCall id="_3Pk" procedure="generic.selectMenu">
          <variable name="target">Exit</variable>
        </ProcedureCall>
        <ProcessWaiter client="$(client)" id="_5h"/>
      </Procedure>
    </Package>
    <Package id="_LB" name="generic">
      <comment>Package for keywords. In this case generic keywords representing single steps on components.
Those keywords use the concept of generic omponents.

@author QFS,mm
@since 4.1</comment>
      <Package id="_3JR" name="dialog">
        <comment>Steps to work on the sub-dialogs.

@author QFS,mm
@since 4.1
</comment>
        <Procedure id="_3JS" name="setTextfield">
          <variable name="target"/>
          <variable name="value"/>
          <comment>Set the text of a given textfield.

@param	target	The text to identify the textfield, e.g. Vehicle price.
@param	value	The value to enter.

@author QFS,mm
@since 4.1
</comment>
          <TextInputStep clear="true" client="$(client)"
                         component="GenericDialogTextField" id="_3JT">
            <text>$(value)</text>
          </TextInputStep>
        </Procedure>
        <Procedure id="_3K-" name="clickButton">
          <variable name="target"/>
          <comment>Click a given button.

@param	target	The text to identify the button, e.g. OK

@author QFS,mm
@since 4.1
</comment>
          <MouseEventStep clicks="1" client="$(client)"
                          component="GenericDialogButton" event="MOUSE_MPRC"
                          id="_3L0" modifiers="16"/>
        </Procedure>
      </Package>
      <Procedure id="_3Iu" name="selectMenu">
        <variable name="target"/>
        <comment>Click on a given menu item, e.g. File.

@param	target	The text of the menu item, e.g. File.

@author QFS,mm
@since 4.1
</comment>
        <MouseEventStep clicks="1" client="$(client)"
                        component="GenericMenuItem" event="MOUSE_MPRC"
                        id="_3J0" modifiers="16"/>
      </Procedure>
      <Procedure id="_3L2" name="checkTableEntry">
        <variable name="target"/>
        <variable name="value"/>
        <comment>Check whether a given entry is shown in the table.

@param	target	The text of the table, e.g. Vehicles.
@param	value	The value to check, e.g. Model=I5.

@author QFS,mm
@since 4.1
</comment>
        <ServerScriptStep id="_3L7" name="translate value to table syntax">
          <code>value = rc.lookup("value")
parts = value.split("=")
rc.setLocal("column", parts[0])
rc.setLocal("row", parts[1])</code>
        </ServerScriptStep>
        <CheckBooleanStep checktype="visible" client="$(client)"
                          component="GenericTable@$(column)@$(row)"
                          id="_3LU"/>
      </Procedure>
    </Package>
  </PackageRoot>
  <ExtraSequence id="_5"/>
  <WindowList id="_6">
    <WindowStep class="Window" feature="JCarConfigurator - Version 1"
                height="400" id="JCarConfigurator" name="JCarConfigurator"
                uid="_3OO" width="350" x="0" y="0">
      <extrafeature name="qfs:class" negate="false" regexp="false" state="0">javax.swing.JFrame</extrafeature>
      <extrafeature name="qfs:genericclass" negate="false" regexp="false"
                    state="0">Window</extrafeature>
      <extrafeature name="qfs:systemclass" negate="false" regexp="false"
                    state="0">javax.swing.JFrame</extrafeature>
      <ComponentStep class="MenuBar" classcount="1" classindex="0" height="33"
                     id="MenuBar" name="MenuBar" uid="_3OP" width="334" x="8"
                     y="31">
        <extrafeature name="qfs:class" negate="false" regexp="false"
                      state="0">javax.swing.JMenuBar</extrafeature>
        <extrafeature name="qfs:genericclass" negate="false" regexp="false"
                      state="0">MenuBar</extrafeature>
        <extrafeature name="qfs:systemclass" negate="false" regexp="false"
                      state="0">javax.swing.JMenuBar</extrafeature>
        <extrafeature name="qfs:type" negate="false" regexp="false" state="0">Menu:MenuBar</extrafeature>
        <ComponentStep class="MenuItem" classcount="16" classindex="0"
                       feature="File" height="29" id="mFile" name="mFile"
                       uid="_3OQ" width="37" x="2" y="2">
          <extrafeature name="qfs:class" negate="false" regexp="false"
                        state="0">javax.swing.JMenu</extrafeature>
          <extrafeature name="qfs:genericclass" negate="false" regexp="false"
                        state="0">MenuItem</extrafeature>
          <extrafeature name="qfs:label" negate="false" regexp="false"
                        state="1">File</extrafeature>
          <extrafeature name="qfs:systemclass" negate="false" regexp="false"
                        state="0">javax.swing.JMenu</extrafeature>
          <ComponentStep class="MenuItem" classcount="2" classindex="1"
                         feature="Exit" id="miExit" name="miExit" uid="_3OR">
            <extrafeature name="qfs:class" negate="false" regexp="false"
                          state="0">javax.swing.JMenuItem</extrafeature>
            <extrafeature name="qfs:genericclass" negate="false"
                          regexp="false" state="0">MenuItem</extrafeature>
            <extrafeature name="qfs:label" negate="false" regexp="false"
                          state="1">Exit</extrafeature>
            <extrafeature name="qfs:systemclass" negate="false" regexp="false"
                          state="0">javax.swing.JMenuItem</extrafeature>
          </ComponentStep>
        </ComponentStep>
      </ComponentStep>
    </WindowStep>
    <WindowStep class="Window" feature=".*" id="GenericFrame" regexp="true"
                uid="_3HI">
      <ComponentStep class="MenuItem" height="-" id="GenericMenuItem"
                     uid="_3JK" width="-" x="-" y="-">
        <extrafeature name="qfs:label" negate="false" regexp="true" state="2">$(target)</extrafeature>
      </ComponentStep>
      <ComponentStep class="Table" id="GenericTable" uid="_3L4">
        <extrafeature name="qfs:label" negate="false" regexp="false"
                      state="2">$(target)</extrafeature>
      </ComponentStep>
    </WindowStep>
    <WindowStep class="Dialog" id="GenericDialog" modal="true" uid="_3JU">
      <ComponentStep class="TextField" id="GenericDialogTextField" uid="_3Kg">
        <extrafeature name="qfs:label" negate="false" regexp="false"
                      state="2">$(target)</extrafeature>
        <extrafeature name="qfs:matchindex" negate="false" regexp="false"
                      state="2">${default:index:0}</extrafeature>
      </ComponentStep>
      <ComponentStep class="Button" id="GenericDialogButton" uid="_3L1">
        <extrafeature name="qfs:label" negate="false" regexp="false"
                      state="2">$(target)</extrafeature>
        <extrafeature name="qfs:matchindex" negate="false" regexp="false"
                      state="2">${default:index:0}</extrafeature>
      </ComponentStep>
    </WindowStep>
  </WindowList>
</RootStep>
